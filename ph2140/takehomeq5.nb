(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    387423,       7338]
NotebookOptionsPosition[    383996,       7225]
NotebookOutlinePosition[    384360,       7241]
CellTagsIndexPosition[    384317,       7238]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{"(*", 
    RowBox[{"Takehome", " ", "Assignment", " ", "Q5"}], "*)"}], 
   "\[IndentingNewLine]"}],
  FontFamily->"Consolas",
  FontSize->16,
  FontWeight->"Bold"]], "Input",
 CellChangeTimes->{{3.7191917870563765`*^9, 3.7191918133887987`*^9}, 
   3.7191918525953393`*^9},
 TextAlignment->Center],

Cell[BoxData[
 RowBox[{"Remove", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7188568733260946`*^9, 3.7188568810898867`*^9}, {
  3.718857036775873*^9, 3.71885710680381*^9}, {3.7188579400229597`*^9, 
  3.7188579438387012`*^9}, {3.7191917816344757`*^9, 3.7191917835250483`*^9}}],

Cell[BoxData[{
 RowBox[{"\[ScriptCapitalL]", ":=", 
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], 
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["m", "1"], "+", 
      SubscriptBox["m", "2"]}], ")"}], 
    SubsuperscriptBox["l", "1", "2"], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[Theta]1", "'"}], "[", "t", "]"}], ")"}], "2"]}], "+", 
   RowBox[{
    FractionBox["1", "2"], 
    SubscriptBox["m", "2"], 
    SubsuperscriptBox["l", "2", "2"], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[Theta]2", "'"}], "[", "t", "]"}], ")"}], "2"]}], "+", 
   RowBox[{
    SubscriptBox["m", "2"], 
    SubscriptBox["l", "1"], 
    SubscriptBox["l", "2"], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"\[Theta]1", "'"}], "[", "t", "]"}], ")"}], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"\[Theta]2", "'"}], "[", "t", "]"}], ")"}], 
    RowBox[{"Cos", "[", 
     RowBox[{
      RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
      RowBox[{"\[Theta]1", "[", "t", "]"}]}], "]"}]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["m", "1"], "+", 
      SubscriptBox["m", "2"]}], ")"}], "g", " ", 
    SubscriptBox["l", "1"], 
    RowBox[{"Cos", "[", 
     RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}]}], "+", 
   RowBox[{
    SubscriptBox["m", "2"], "g", " ", 
    SubscriptBox["l", "2"], 
    RowBox[{"Cos", "[", 
     RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Lagrangian", " ", "for", " ", "a", " ", "double", " ", "pendulum"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJwdxU0sgnEAB+ASm8lSxjveg9ZYazJeow4dwmK2zEEHM9OlrcQUI021bNZF
NpYcOnRIo9B8NJNNkYtbNgeHNnNoxqE1s2FrKPx/HZ49It2sRl/GYrFoAivc
Zr8kluurzHIOcZy5Ougg87VLEaxapqP4nAnGMG0evsRGj/gaT5zkCjgzShVx
q/iLxZDby51cPPU2JsAtFyYax6lBKa5+HGcw55dvWCCvva5bsfeO58LdiewW
zn7vVljITXKKi93NPRJscz6U3mPLOvFTWibHdq9ue5GcTNcF8cZm7zvWqtUf
+Od5mm8lp2aOKWxkJELMKMMi7GE7pJjnT5bO/M0bcIDnK92l0IfsZM2tJoxX
AkN5fHOmKuDahpoqB9nS6OLiz5FJAba++Orx6WI+jinbXAKvOu8LO+SjkKmI
+4Vt+ymyMjoQwf85QNZS
  "]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"A", "=", 
  RowBox[{"NDSolve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[PartialD]", 
            RowBox[{
             RowBox[{"\[Theta]1", "'"}], "[", "t", "]"}]], 
           "\[ScriptCapitalL]"}], ",", "t"}], "]"}], "\[Equal]", 
        RowBox[{
         SubscriptBox["\[PartialD]", 
          RowBox[{"\[Theta]1", "[", "t", "]"}]], "\[ScriptCapitalL]"}]}], ",",
        "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[PartialD]", 
            RowBox[{
             RowBox[{"\[Theta]2", "'"}], "[", "t", "]"}]], 
           "\[ScriptCapitalL]"}], ",", "t"}], "]"}], "\[Equal]", 
        RowBox[{
         SubscriptBox["\[PartialD]", 
          RowBox[{"\[Theta]2", "[", "t", "]"}]], "\[ScriptCapitalL]"}]}], ",",
        "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[Theta]1", "[", "0", "]"}], "\[Equal]", 
        RowBox[{"Pi", "/", "2"}]}], ",", 
       RowBox[{
        RowBox[{"\[Theta]2", "[", "0", "]"}], "\[Equal]", 
        RowBox[{"Pi", "/", "2"}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Theta]1", "'"}], "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Theta]2", "'"}], "[", "0", "]"}], "\[Equal]", "0"}]}], 
      "}"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["m", "1"], "\[Rule]", "1"}], ",", 
       RowBox[{
        SubscriptBox["m", "2"], "\[Rule]", "1"}], ",", 
       RowBox[{
        SubscriptBox["l", "1"], "\[Rule]", "1"}], ",", 
       RowBox[{
        SubscriptBox["l", "2"], "\[Rule]", "1"}], ",", 
       RowBox[{"g", "\[Rule]", "9.8"}]}], "}"}]}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Theta]1", "[", "t", "]"}], ",", 
      RowBox[{"\[Theta]2", "[", "t", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "100"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "numerically", " ", "solving", " ", "the", " ", "equations", " ", "of", 
    " ", "motion", " ", "and", " ", "storing", " ", "as", " ", "a", " ", 
    RowBox[{"list", ".", " ", "the"}], " ", "initial", " ", "conditions", " ",
     "can", " ", "be", " ", "changed", " ", "from", " ", "here"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.719012151191863*^9, 3.719012294588716*^9}, {
   3.7190123619721856`*^9, 3.719012390345518*^9}, {3.7190126028973565`*^9, 
   3.7190126328677845`*^9}, {3.7190129703710923`*^9, 3.719013022800689*^9}, {
   3.7190131021124587`*^9, 3.719013196527153*^9}, {3.7190132405458803`*^9, 
   3.71901324187085*^9}, {3.7190155493827705`*^9, 3.7190156304438305`*^9}, {
   3.719015826532287*^9, 3.719015849468499*^9}, {3.719015905720193*^9, 
   3.719015964705583*^9}, {3.7190160147431307`*^9, 3.719016015668764*^9}, 
   3.7190163334665318`*^9, {3.7190163661967163`*^9, 3.719016375283207*^9}, {
   3.7190168116882095`*^9, 3.719016821032003*^9}, {3.7190169604189053`*^9, 
   3.719017124102274*^9}, 3.71901716102107*^9, {3.719017203486555*^9, 
   3.7190172329134865`*^9}, {3.7190172771705475`*^9, 3.719017282062024*^9}, {
   3.719026094787963*^9, 3.7190261005692897`*^9}, {3.7190261321675205`*^9, 
   3.7190263287805386`*^9}, {3.719026369831848*^9, 3.719026494141902*^9}, {
   3.719026692776416*^9, 3.7190267135438395`*^9}, {3.7190268754050193`*^9, 
   3.7190269329740973`*^9}, {3.719026991917756*^9, 3.719026996780149*^9}, {
   3.7190271704304175`*^9, 3.7190272838400598`*^9}, {3.719027392500601*^9, 
   3.7190273936881127`*^9}, {3.719027458291211*^9, 3.719027511123435*^9}, {
   3.7190275606147957`*^9, 3.7190276008848414`*^9}, 3.7190276553585033`*^9, {
   3.7190276854409485`*^9, 3.7190277807163663`*^9}, 3.7190278388285837`*^9, {
   3.7190279144221582`*^9, 3.7190279299164577`*^9}, {3.719029098482993*^9, 
   3.7190290989133196`*^9}, {3.7190292189559083`*^9, 
   3.7190292196453934`*^9}, {3.7190294695735016`*^9, 3.7190294913122215`*^9}, 
   3.7190295769588213`*^9, {3.7190296186157155`*^9, 3.7190296298937635`*^9}, {
   3.7190299783661103`*^9, 3.7190299795709677`*^9}, {3.7190300199208355`*^9, 
   3.7190300233231573`*^9}, {3.719110698551936*^9, 3.719110726987254*^9}, {
   3.719110860053027*^9, 3.719110867555338*^9}, {3.719110954857006*^9, 
   3.7191109843252316`*^9}, {3.7191110172345667`*^9, 3.719111020080617*^9}, {
   3.719111576481968*^9, 3.7191115904542007`*^9}, {3.719112353639454*^9, 
   3.719112355214548*^9}, {3.719143380646407*^9, 3.7191434015391407`*^9}, {
   3.7191522158550825`*^9, 3.719152217651951*^9}, {3.7191523094409776`*^9, 
   3.719152310112862*^9}, {3.719152409222283*^9, 3.7191524321126347`*^9}, {
   3.719152523024167*^9, 3.7191525357139397`*^9}, {3.719152610237037*^9, 
   3.7191526119714932`*^9}, {3.719153346912814*^9, 3.719153377964555*^9}, {
   3.719153414232628*^9, 3.71915346763678*^9}, {3.7191563054828744`*^9, 
   3.719156331177817*^9}, {3.7191563880302134`*^9, 3.7191563885302997`*^9}, {
   3.7191564252821903`*^9, 3.7191564896472225`*^9}, {3.7191574527888885`*^9, 
   3.7191574751350164`*^9}, {3.7191575148010626`*^9, 
   3.7191575233823595`*^9}, {3.7191918946331096`*^9, 3.719191939450296*^9}, {
   3.7191919949238014`*^9, 3.719192009191662*^9}, {3.7191921572086096`*^9, 
   3.719192161445136*^9}, {3.7191922433459997`*^9, 3.71919225145555*^9}, {
   3.719192409739332*^9, 3.7191924119424906`*^9}, {3.7191925242205276`*^9, 
   3.719192529316346*^9}, {3.7191935185951524`*^9, 3.719193544849399*^9}, {
   3.719193819864066*^9, 3.719193872574457*^9}, {3.7191939661313252`*^9, 
   3.7191940175763907`*^9}, {3.719194117619706*^9, 3.7191941306511497`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Theta]1", "[", "t", "]"}], "\[Rule]", 
     RowBox[{
      TagBox[
       TemplateBox[{RowBox[{
           StyleBox[
            TagBox["InterpolatingFunction", "SummaryHead"], 
            "NonInterpretableSummary"], 
           StyleBox["[", "NonInterpretableSummary"], 
           DynamicModuleBox[{Typeset`open$$ = False}, 
            PanelBox[
             PaneSelectorBox[{False -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                   GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAnIW2B5tvvD6hhEJU+yH5P0XRMWw0
Ffo/q0JwWvCr+L8FZS60Bi4LQJn6KD1XMPI/aslGZ8wwFED5duaV3jXhv8qC
eNpvqRpA4BLUY9DQmT8VebNxPtcgQCXNpM85QuY/IB09Xc4dJEDB0Pjo32jR
vykcpROTqidAg+vfLHUa+r9wLA79xCYrQKCm5RZkhPA/EKmJTQBnLkDQWwR5
pfXwv1jAcTS49jBAGugDvJCy7r9V4qf19JsyQIWjTeEoQNW/8YxeUOg4NEBd
HQ3rXkb6PwxlhBD2+DVAfDCheaElvL9VczOECJs3QNLoYKTHBuq/Hq9RXTVg
OUAMCTQNWC7zv4Vz8M8YHTtAn/M6EfzJ3z8Zbhj2ALw8QCiDxKc4yfQ/LZav
gQN+PkDiE7zm7qbIvzj6Z2AFEUBAIVmrG9iY4L8ZwK8ylvRAQJgBY+AEXADA
Scq3UQLUQUAKvgNoTH3EP49vhMpwpEJAMWODq23e6D+Vqwh2bIZDQGoBZ0NG
hPe/soJRe2pZREDCH9U/dL/MPx6eWs1DKEVAiv8+mICU/j9KUBtSqghGQBhl
tkTDXPK/jZ2gMBPaRkA6GGICCbP7P4+B3UEJvUdAjg0k8zQ6x7/hqdqf2ptI
QNAoH/qizeE/SW2cV65rSUAIvlxfCkXDP3HHFUIPTUpA/DbPf9Be7r+wvFOG
ch9LQMuxZz/2ifs/PvZRF7HtS0CEMUCVBC/ZP4zGB9t8zUxAadA+1Yq08L/w
MYL4Sp5NQGLR7KiIjfM/FDS0SKaATkDnMYHgjD3hv0/RqvIDVE9A+GBsDROq
6b9t2bB0nhFQQPuD7tRpGdY/khVoiQGCUECsO7VEaK70P0KfAcvl6lBAWlsL
3GOZ7D9S9PalkFxRQMdTJbIKPdY/imtMJynMUUD40iVgpwr+v00whNVCNFJA
XAp9rvFI6D9wwBcdI6VSQC1j+s0Hi/E/H56NkYQOU0BzZHZM8/3mP/WdY6zT
dVNAscDVN6fD/r8raZVg6eVTQG3fl06Ujto/7IGpQYBOVEAeKrOsdPDxPw1m
Gbzdv1RAXJBWhMGSqT9WbOncKC9VQGjGjb1yC/m/KsCbKvWWVUBfddawxcLq
P17fqRGIB1ZALxeOL5M74D8dTJolnHBWQHhbm5JzUdu/PITm0nbiVkDPOd6B
R/nuP4PekiY/UldAzOFzxTwy+T9VhiGniLpXQHZfXL+PAus/h/kLwZgrWEA8
VJ3i8abkv0W62AcqlVhAhFfgk+rLrL8+GeT4//9YQLmbEoKXkfA/ywXQfg==

                    "]]}}}, {}, {}}, {
                    DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 100.}, {-2.0449311762060454`, 
                    1.9112554499733698`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}], True -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                   GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAnIW2B5tvvD6hhEJU+yH5P0XRMWw0
Ffo/q0JwWvCr+L8FZS60Bi4LQJn6KD1XMPI/aslGZ8wwFED5duaV3jXhv8qC
eNpvqRpA4BLUY9DQmT8VebNxPtcgQCXNpM85QuY/IB09Xc4dJEDB0Pjo32jR
vykcpROTqidAg+vfLHUa+r9wLA79xCYrQKCm5RZkhPA/EKmJTQBnLkDQWwR5
pfXwv1jAcTS49jBAGugDvJCy7r9V4qf19JsyQIWjTeEoQNW/8YxeUOg4NEBd
HQ3rXkb6PwxlhBD2+DVAfDCheaElvL9VczOECJs3QNLoYKTHBuq/Hq9RXTVg
OUAMCTQNWC7zv4Vz8M8YHTtAn/M6EfzJ3z8Zbhj2ALw8QCiDxKc4yfQ/LZav
gQN+PkDiE7zm7qbIvzj6Z2AFEUBAIVmrG9iY4L8ZwK8ylvRAQJgBY+AEXADA
Scq3UQLUQUAKvgNoTH3EP49vhMpwpEJAMWODq23e6D+Vqwh2bIZDQGoBZ0NG
hPe/soJRe2pZREDCH9U/dL/MPx6eWs1DKEVAiv8+mICU/j9KUBtSqghGQBhl
tkTDXPK/jZ2gMBPaRkA6GGICCbP7P4+B3UEJvUdAjg0k8zQ6x7/hqdqf2ptI
QNAoH/qizeE/SW2cV65rSUAIvlxfCkXDP3HHFUIPTUpA/DbPf9Be7r+wvFOG
ch9LQMuxZz/2ifs/PvZRF7HtS0CEMUCVBC/ZP4zGB9t8zUxAadA+1Yq08L/w
MYL4Sp5NQGLR7KiIjfM/FDS0SKaATkDnMYHgjD3hv0/RqvIDVE9A+GBsDROq
6b9t2bB0nhFQQPuD7tRpGdY/khVoiQGCUECsO7VEaK70P0KfAcvl6lBAWlsL
3GOZ7D9S9PalkFxRQMdTJbIKPdY/imtMJynMUUD40iVgpwr+v00whNVCNFJA
XAp9rvFI6D9wwBcdI6VSQC1j+s0Hi/E/H56NkYQOU0BzZHZM8/3mP/WdY6zT
dVNAscDVN6fD/r8raZVg6eVTQG3fl06Ujto/7IGpQYBOVEAeKrOsdPDxPw1m
Gbzdv1RAXJBWhMGSqT9WbOncKC9VQGjGjb1yC/m/KsCbKvWWVUBfddawxcLq
P17fqRGIB1ZALxeOL5M74D8dTJolnHBWQHhbm5JzUdu/PITm0nbiVkDPOd6B
R/nuP4PekiY/UldAzOFzxTwy+T9VhiGniLpXQHZfXL+PAus/h/kLwZgrWEA8
VJ3i8abkv0W62AcqlVhAhFfgk+rLrL8+GeT4//9YQLmbEoKXkfA/ywXQfg==

                    "]]}}}, {}, {}}, {
                    DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 100.}, {-2.0449311762060454`, 
                    1.9112554499733698`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}]}, 
              Dynamic[Typeset`open$$], ImageSize -> Automatic], 
             BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
           StyleBox["]", "NonInterpretableSummary"]}]},
        "CopyTag",
        DisplayFunction->(#& ),
        InterpretationFunction->("InterpolatingFunction[{{0., 100.}}, <>]"& )],
       False,
       Editable->False,
       SelectWithContents->True,
       Selectable->False], "[", "t", "]"}]}], ",", 
    RowBox[{
     RowBox[{"\[Theta]2", "[", "t", "]"}], "\[Rule]", 
     RowBox[{
      TagBox[
       TemplateBox[{RowBox[{
           StyleBox[
            TagBox["InterpolatingFunction", "SummaryHead"], 
            "NonInterpretableSummary"], 
           StyleBox["[", "NonInterpretableSummary"], 
           DynamicModuleBox[{Typeset`open$$ = False}, 
            PanelBox[
             PaneSelectorBox[{False -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                   GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAnIW2B5tvvD4YLURU+yH5P0XRMWw0
Ffo/sXKsp6cZ978FZS60Bi4LQATnQK/zMu4/aslGZ8wwFEDM3jjEQb/xv8qC
eNpvqRpAVjSP0i+95z8VebNxPtcgQNkGKoxw4N4/IB09Xc4dJEDwUQDXYevv
vykcpROTqidABYi6yKZyGsBwLA79xCYrQH3u2qXipQzAEKmJTQBnLkChqMUM
8usjwFjAcTS49jBAx6YDuAMOMsBV4qf19JsyQESkQ2SDHzrA8YxeUOg4NEBY
fkmYCxs5wAxlhBD2+DVAjXpAedSAPcBVczOECJs3QEaYJ84grj/AHq9RXTVg
OUAAMHt1isg+wIVz8M8YHTtAEIfddXk1Q8AZbhj2ALw8QNUP7ng9vULALZav
gQN+PkD4T1FaYQlCwDj6Z2AFEUBAzuC+hJy2RMAZwK8ylvRAQEUNr8Rn2UXA
Scq3UQLUQUBUxgU8W05FwI9vhMpwpEJAPACIEcKUScCVqwh2bIZDQA2IMNBw
60zAsoJRe2pZREBLGd3PK6VKwB6eWs1DKEVAAjLPzR7oSMBKUBtSqghGQNvd
V5+vUErAjZ2gMBPaRkDkdg7X6cRIwI+B3UEJvUdAMgw2KNMvSsDhqdqf2ptI
QDhNIiVsEknASW2cV65rSUAu1HgTV/pIwHHHFUIPTUpAViyBkH+JR8CwvFOG
ch9LQD1Z23C+BUbAPvZRF7HtS0DQuQLpspdGwIzGB9t8zUxAH+pTZKstQsDw
MYL4Sp5NQFj7ugqvgj3AFDS0SKaATkBPAIrbsh5BwE/RqvIDVE9ADH3Pu70l
OMBt2bB0nhFQQEazhpt3LzrAkhVoiQGCUECNTujUbBI4wEKfAcvl6lBA3kPu
sN2bOsBS9PalkFxRQBMp2xt9qDvAimtMJynMUUAPWHiBMu4/wE0whNVCNFJA
S1sVPs1ePMBwwBcdI6VSQIRmot/EjzXAH56NkYQOU0BhFrYgmUU8wPWdY6zT
dVNAXsxpGH/9P8AraZVg6eVTQOPvFV+NMzzA7IGpQYBOVEDoBdNcdYJAwA1m
Gbzdv1RAQDPhb9U2RsBWbOncKC9VQHW7eZRYkEnAKsCbKvWWVUAerhWFNXRI
wF7fqRGIB1ZASOft9I3wScAdTJolnHBWQLFw3U1umkTAPITm0nbiVkCHqU3E
1+ZCwIPekiY/UldAPzXbtZAtQ8BVhiGniLpXQO7QNQM/fkPAh/kLwZgrWEAJ
RYAhuvk+wEW62AcqlVhAbSeD6cA+QMA+GeT4//9YQCuTji27qT7AZ165kQ==

                    "]]}}}, {}, {}}, {
                    DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 100.}, {-57.83938028688144, 
                    1.5707963267948966`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}], True -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                   GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAnIW2B5tvvD4YLURU+yH5P0XRMWw0
Ffo/sXKsp6cZ978FZS60Bi4LQATnQK/zMu4/aslGZ8wwFEDM3jjEQb/xv8qC
eNpvqRpAVjSP0i+95z8VebNxPtcgQNkGKoxw4N4/IB09Xc4dJEDwUQDXYevv
vykcpROTqidABYi6yKZyGsBwLA79xCYrQH3u2qXipQzAEKmJTQBnLkChqMUM
8usjwFjAcTS49jBAx6YDuAMOMsBV4qf19JsyQESkQ2SDHzrA8YxeUOg4NEBY
fkmYCxs5wAxlhBD2+DVAjXpAedSAPcBVczOECJs3QEaYJ84grj/AHq9RXTVg
OUAAMHt1isg+wIVz8M8YHTtAEIfddXk1Q8AZbhj2ALw8QNUP7ng9vULALZav
gQN+PkD4T1FaYQlCwDj6Z2AFEUBAzuC+hJy2RMAZwK8ylvRAQEUNr8Rn2UXA
Scq3UQLUQUBUxgU8W05FwI9vhMpwpEJAPACIEcKUScCVqwh2bIZDQA2IMNBw
60zAsoJRe2pZREBLGd3PK6VKwB6eWs1DKEVAAjLPzR7oSMBKUBtSqghGQNvd
V5+vUErAjZ2gMBPaRkDkdg7X6cRIwI+B3UEJvUdAMgw2KNMvSsDhqdqf2ptI
QDhNIiVsEknASW2cV65rSUAu1HgTV/pIwHHHFUIPTUpAViyBkH+JR8CwvFOG
ch9LQD1Z23C+BUbAPvZRF7HtS0DQuQLpspdGwIzGB9t8zUxAH+pTZKstQsDw
MYL4Sp5NQFj7ugqvgj3AFDS0SKaATkBPAIrbsh5BwE/RqvIDVE9ADH3Pu70l
OMBt2bB0nhFQQEazhpt3LzrAkhVoiQGCUECNTujUbBI4wEKfAcvl6lBA3kPu
sN2bOsBS9PalkFxRQBMp2xt9qDvAimtMJynMUUAPWHiBMu4/wE0whNVCNFJA
S1sVPs1ePMBwwBcdI6VSQIRmot/EjzXAH56NkYQOU0BhFrYgmUU8wPWdY6zT
dVNAXsxpGH/9P8AraZVg6eVTQOPvFV+NMzzA7IGpQYBOVEDoBdNcdYJAwA1m
Gbzdv1RAQDPhb9U2RsBWbOncKC9VQHW7eZRYkEnAKsCbKvWWVUAerhWFNXRI
wF7fqRGIB1ZASOft9I3wScAdTJolnHBWQLFw3U1umkTAPITm0nbiVkCHqU3E
1+ZCwIPekiY/UldAPzXbtZAtQ8BVhiGniLpXQO7QNQM/fkPAh/kLwZgrWEAJ
RYAhuvk+wEW62AcqlVhAbSeD6cA+QMA+GeT4//9YQCuTji27qT7AZ165kQ==

                    "]]}}}, {}, {}}, {
                    DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 100.}, {-57.83938028688144, 
                    1.5707963267948966`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}]}, 
              Dynamic[Typeset`open$$], ImageSize -> Automatic], 
             BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
           StyleBox["]", "NonInterpretableSummary"]}]},
        "CopyTag",
        DisplayFunction->(#& ),
        InterpretationFunction->("InterpolatingFunction[{{0., 100.}}, <>]"& )],
       False,
       Editable->False,
       SelectWithContents->True,
       Selectable->False], "[", "t", "]"}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.7191533608392982`*^9, 3.7191533789489408`*^9}, {
   3.719153416232589*^9, 3.7191534681524253`*^9}, {3.71915630917043*^9, 
   3.7191563327715435`*^9}, 3.71915638971774*^9, {3.719156429079099*^9, 
   3.719156490162874*^9}, {3.719157455507679*^9, 3.7191574768381586`*^9}, {
   3.7191575164572554`*^9, 3.719157524413616*^9}, 3.7191910933676834`*^9, 
   3.719191947075341*^9, 3.719192163210719*^9, 3.719192256439916*^9, 
   3.7191924183018785`*^9, 3.7191925301600404`*^9, 3.719193489936407*^9, {
   3.719193521532668*^9, 3.7191935455680785`*^9}, {3.7191938241609364`*^9, 
   3.719193873527519*^9}, 3.719193962818771*^9, {3.7191939943553295`*^9, 
   3.719194018670167*^9}, {3.7191941193227887`*^9, 3.719194131291725*^9}}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7190272874338465`*^9, 3.7190273114810696`*^9}, {
  3.719027368607601*^9, 3.7190274323957977`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Theta]1", "[", "t", "]"}], "/.", "A"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "30"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.719027434442682*^9, 3.719027471932025*^9}, {
  3.719027762716127*^9, 3.7190277638254986`*^9}, {3.719192573570631*^9, 
  3.719192574648841*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
TwacVzpZpwmZtqdyVy3U46kX7g81mjVhnHrH98mdOhxYeVZktI3ff7qJ5q/O
Grx20s0/q1MT5CaLVsYM/sAJ0qdHvXo14YpI3o6CyG+YsPPUcdaQJngXx21Q
LirBRnecDAonNeEbcfQ8vvweN2efyLsxqwlGhsbDkTlp2PnnMYL+Ah//xWzW
xsRwPLnkaOLKpVqgn+r/V/TtQ3RdzUGySkgLlh8pc9HTe4VWm9rfihTTApW7
y+Vt49+heC+7Ocs1WtATMZUWsy0faT6xPbNxvRYU/Yqriu4rRB++WHf8lNaC
N2ogVmpShPYOWB54ukUL8nqvxLubF6N6iQMlx5W1YNbpL0F0qgQdp5uzVLdp
wRoFAZqRXhni2Zu+GtDSAteP/hVK28vRlRv7t7wm8+sbf53v7S5HYqn77rkz
tKAJn/hrvasCxVYbLqfu0AJ75TmBkoMVSG1a33catEDUb0+nlkYFypHbO/Rx
jxbIspuj93wsR7t373a4YqQFW5ZSq+6LlKNaV72anaZaYBA8G3ZFpgwdjYTd
yy21YHCbyyHb8RLEzdXNLbPVgteby8VPRxQj//Yd6mGHtUDuoccNgZkitHL5
9jjT41qQ5i3mfkrjC4rRYK1e56IFkdJd/oJahchqX2VEwWktiLF0MmFJ5aO1
p4+tcXXXgg3pjqUrLuWi26khaz9f5K/P6L18m5yKDCrk7rtd0YLxyuf9D/c9
RcsGM9dtvKEF8i8P4CD/AHRlW6vkuTC+XtksZUOL53i74dko6UgtMN9VeObn
/Qw8c1JwfUmUFqw1kOG+1sjFHinqG+SeasEDKQODbOcv2HGr36ZvmVpw9J5k
yC6LaqygLxHrnaMFCua756SVanG783/Sinl8Po96sff/qcM2L77JXPyqBfnk
hvjwR03YSEV289YmLTitfYM7XtKOhfZkxNf+1ILUg1802nd14K+Ou7dc6dCC
jwuiqqcUOrHuczf5hgEtWBpuEZBWy8EkpU+KN+a14PmWrxt2rujFXD3z/whL
COC0+/VJ4bJenHq8R6l1OQEISpUv/gby3wPPVqmQJAhQ5qu0pGS0H3d+Tkxq
W0eAtVpF49ZxAzi+k6YavJEAjT7HeEF7BvFGBYetvxUI8GIyacb+5hBugPHk
UFUCNKWUPG2UHcb3jgap0TUIADExqx+mD2PRhPRt4VQCDAz/GkkuHMFlWC+V
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
cDf8sMHPk4f/B0C86FU=
      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 30}, {-2.0672263250956386`, 1.7917302265891588`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7190274529919925`*^9, 3.7190275216098766`*^9}, {
   3.7190275694742947`*^9, 3.719027605916157*^9}, 3.7190276589054294`*^9, {
   3.719027692206651*^9, 3.7190277838590364`*^9}, 3.719027844374549*^9, 
   3.7190279347188625`*^9, 3.719029544866791*^9, 3.7191108713760533`*^9, {
   3.719110963666395*^9, 3.7191109893988547`*^9}, 3.719111027880138*^9, 
   3.7191116074135323`*^9, 3.719143419067712*^9, 3.7191563620262194`*^9, 
   3.7191563940615644`*^9, 3.71915644415306*^9, 3.719192166054496*^9, 
   3.7191922620201726`*^9, 3.7191924216925554`*^9, 3.7191925758519154`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Theta]2", "[", "t", "]"}], "/.", "A"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "30"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7190275332663145`*^9, 3.719027544471817*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJwcl3c819/3wG2y93i/zTfeVilSJLrHakgoIxJRIZSsFAopKlTSEsLHSBRJ
USj3VWSXqIyMrGTv8bZ/7+/vr9fj+bjn3DPuued1j9zJ80dcmRgYGMbYGRj+
913orq1UiMncI77F2HpFbgn9TBEPMmiLQA5N2/+fQaTxpHhbPAp0vGH1Pxbt
ENjEb5yMxt8Kmv+PAy1zW5nb0tFy1+D2/7HLm/rcjdvZ6KSxbMcync1Ex6+s
GL1EZRMzY0t0Tta78XzlcgGqtspsWKSzwIRY/FJrIfp762LQLJ2jUp+HLGoW
IY2szWdH6bxquct1/vY79Jb95dkuOvsx1ZnPDpWgLTdj3KroPPTmmM600QeU
ellJO53OTq6jcpMp5UgrMuySF509ucojFy4TKK/Q/wCZzgqno4Iv5H5CrrLS
wjmyS+jPB/Pzc62f0R9wteKkc6KI2Gl/1krULLBurymzhKy9/9jNaH5BvINn
yILSS4ivOvuQr3MVCjC/tPRYcgnVyfgYTt2uRp2fmRJekZZQ5CUd7fNlNSjk
/uv3BuL0/DUxbJ4YqkUey79ltUSW0IpKrew50XrkSa6/6SGwhIoj7omMGTUg
96InyZ+4l5BPhz2nl+9XRH7oyiLBvoTUtCgbwynfkPPv4isHGJbQYOzI7JmG
RrRyg4lJlUZD3/3s52Yvf0daLIG0OxM0pJ760fuNUBNq4m3yN+2noZh6uWG/
3CaU8Y0paHMLDQ0tRp7SNGhGGkNSh5iraWivwkjXdGszKmWUrUkqoqFMS3O7
194/EIyK5376j4YYrxQ2+7D+RF/y06ZQDA055Yge2pb8Ey1RGlR7fWnow6/g
6knNX6hm4m/teRsakmD6Y/Cq9hea25x6rngHDQWqG33wdm5BIvv7VMMFaejn
seyd6ostaKO+uyFhdBFp3OB6PX67FU30U/i/EovozpvzankKbSg173vryL1F
NPbnR9bZsjYETPuOf3JaRAe4dWQ3H2lHUlrzNnJKi+iZTnLi6FA7+tTVLNc1
soBYXBlEXoT9RnvtvvfW5Cwgl3un73qKdqCCLNeE0lMLSHJk8/Vho04EP4J7
BGrmUbDovfXnvztR4+6JxC1+86jVcP7SGd8uVKt+uKRMdB7FJ3089y+lGyl5
Nui8MZ9DU9VyQ892/EFybyhKA72z6NBc5Em3hj8omvQoXvT8LLpOzX4xc7kH
WY06iCpdnEGFeu1njtT0oM/mpju6p6dR7xEuaqFQL7rVwty/320a7Qk7n+ab
24vORwp4M+tNoaVW7YdTrX1ILy3xhoPWKHqvyeGcrdKP7ubZz8VlDKPA222q
TiH9iF0wpPM78xCaMQwi6qUHEIs1sflRwgAaySsdfeb6F0VZCOWuH/iNnnPE
FDu++4vahd/fGnJoQW6nHK4KbxpE5e0JXa0nmlG/+KpoxMtBZL0SmB2VVok6
r+kbOs7+QyY7BcmXw4pxYjcPj7DJEPp1w7lzdPwzttvV3Vr3aAhlpK7bV5+v
w78mQs/p6A6j+ogfZ6jnfuIHByx0JmOG0WePO6fyulrxkUwZ5mddw8hTTcfA
ZFsH/mZPJAhdHUFvr65fHSrrwbFv407VNY+gQaNQ7vwdfdiUz0X9qsIoIpeJ
xbOn9uPqSsbKiepRNGBzLZ1AgzhKpvlOlsQYMul/+q4n8B82Dk63P+41hgRC
pDYLPx3CxFajyVreccQZ96szo3gEh0YLlYY7j6Mv3FKbBHNHsd7f/uvahePo
jX2MYknsGF5Gby0mmCeQ9rn4TsJpHJckXidl2Uwg06DLSidkJ/Cleeu/DtkT
KD1i4WF70wTeaalYILg0gQ5H6mZF+U/iudz54FrTSfSx8su9f0xTuJC1yiQ8
eRJ9UWmoe2w8hX2dH/FrT0yiKz791ZJhUzjB8c34gswUyh+kXqgrnMKL0WSr
5v1TSJcxxZ6hZwrbvr/2Ps93Cp3INvyhwj6Ni/6OSt1KnEJXI8UYy5WnsbCQ
9bXTFVMoYzx5JzKZxv7wYQiNTSEalXV6l+M0bj6nYE4WmUbE9iF2I99prJEU
+2ZBfxr9O/TYdv7qNI6rmRNvptfdfSKjaOLuNJ6cPx6ad3calV+KuN6QNI3N
5b/033w/jQ54wJzSs2mcZ7nlwOneaVQx9P5E/KtpzB36MB9xzqBJK+e1e++n
cV2ba9CCwww6FL0US6mfxips37qbrs8gmeP7p/1/TeOb23ca5+XNoCaTbWq/
e6bxP+eUnJstM+iF9dDdmPFpvPcOG9/pjRnU3CbJ92plGmeVeQcg5VkkcfF1
viPXDGYZbmknHZ5FPMfTUKbkDD4titBC0CwqKa1Witw6gyuMsjOb0mfRqSR7
hWWjGbztzqvhxZpZZG392+CC3QxOaXunLj05i0xfem3s8J7Bl87VvPfcPYeU
JiO89Z7OYPXHww3MP+eQ9Rs4Nsw2i5N7pwVUl+eQSLlX5Q75Wbxp87Ktpew8
+r2/96QQzOIBgrM3+ew8elgqu0MlZBYnjqjN72BdQEEBhYt352axz70Ck0R3
GvLsqu77+X0ed3e8jyZu05DPwlRKxPg8Pkj91Dj4hobOId+lLZwLmFrWZL+d
3tfLhQODM40WcMfAzLmGhCV03v4Qln6/gPdvXSmcKV9CtdnMW4hfC7g4iJkm
/ncJ6e7m8EqbXcBxvMIRrhrLKMPPPUdq2yLeq7Pj0XrtMjLQ63ml9mIRv43Q
71CYWkabNQ6Jz9UuYrmvJrIHRVfQ/S+CQRFDi3jVxTb38ckVVEmrHDNRoGGP
l06TH2+uoJ9qloSIAQ23LLhpDeSvoIeTz3p6j9Pw65iL5dtWVlD2tvYczzga
lm4JYz4qt4qeJz2cTcqm4VjZm/uv7FtF63pXc99+oOElz7jbGedWEb+loLJn
Iw27FSU0195fRb5BBZ6+f2j450aa2FTJKpKoHO0KG6NhA9Oc46I9q0gtz4fF
bIGG8x+8/k+PbQ1NPjzMeGeVhiX/lAye3LyGrh8wY2DYoGGGWd+E2sNriHUh
T8F3jYYH2FRNt11cQ3esdPlLF2m4htS38ih5DW1v6J1MHafhPPXEvLVPa+jC
n89eI900HG945MTpf2toZwPLi1P1NBxoyylQz72Oxr87HG4rpOFjnp8/a2iu
I6DyB4s9pOE9ocEBCUfX0SG38MIZXxqmxGtSNy6vo9jOknn9AzTM9myk1TV9
Hf0nupzTSKLhkZL0Ww3V62hyyiYtfHARf/t6bPf28XXkb7hLdPPLRVzYKzj+
RHADNS0uv3vltYgfzdelMOhsoOQnVzJGFRbxCandTN8iNpCW/h4uiesL2Fhj
9o3W8w3ke1ljvkVlASubvHBN+rqBLu4PnfpbM4+57U+JMc1uILEdaXyaLvP4
UvHt01rcDNBbXHc7Z2YOexIeH/9JM0Bh74tnelfm8PE6E9EkDQaQvXLUsYth
DkP3WjXjUQbgNWtkEZudwZpD7bJFHgzwT7z0SKLLDFaYKQo6c5kB9hly7tmo
mcYcbN5qjf8xgGgg/569EVO4aUv3neQxBhBm57giv3sUV2qX/rPYYICBAnOh
3xnDuNjgETALMgKvg9zc47V/ONHGfMZDmxHaHp1Omrs2gE9eKbfRjmAE7gGp
1HWiHVvfSMwfecAI327girSXv/Dee4HsKdmMENG4M60yogmrZqmXsHxlBO+B
ezMqjJ/xTEOKZLMYExgf9bv1eyuBBlqCL0SqMsHo+g2rLaE1qKXH9puOPhN8
yeTpN7L8jkrneMNTTzLB5aGUUgHFNvRyfaTtyAUm4LTTvbQy0IFSOKo12G4y
gW3IQpfCjT/ommRY/9k8JmAh1zzfotOPAqkOerIEE/QdiN0R2TGAzmzTfvij
mQmC43Lg5vlBZGY8uVeXxgTbphKs//MYRnvM61PHOZnh7ve5VKJxBG2zy6al
STGDq/X1N4nUMSR89kQuuxEzWDwsYQl9NoFU2TOqLI8yw83R2J6Vf5MI0gf7
nngxw19n6X8fYqaQrb7qRl8YM/z3xmMpmDSNzradI29+wAyqSWYvddKmUYT/
a+0Lz5nhZ417Dk1yBiXwzluVf2AGu+JvzkTcDMrP0fFhb2IGTse3jxNWZlCl
8eVYy7/MkBL6pv+24yz6/Qc/f7JE9/fAKZHXxbNoKpj5Sx8PCyxrb34kxj6H
2ET39apRWOCu9tvyDvr7SPJ19FrAThYQYzy1WerOHNI0+yZRbsoCF/LGyIxf
5tD+fwI72U+wwKruzPfC2TnkFGFzxNKfBXzl3PlPk+ZRgNQT7yc3WKAsNrnw
0K55FP2+M7oviQVE7XIsCyznUZqVbLZaAQsMIyr3L+d5VDxxqiKgki4vOOHO
6zmPGm5l//nYxgJep6aVS+h9uk9hdIVtnAVKZBso+h7ziIbVxS0ZWSHykX8j
D12f18FP64kIK6Rq6UblHp5HCgtFln0qrPA6uUkmZc880r23dFZtDyu8Cgxp
vqI0jyw3698KOMIK7Grliv+455FbdXjWRzdWiBZzG708OYcun6z8xBbCCkFT
8cf7G+dQ/Bp7t8VdVki8TXpSlj+HniccXE7IYIWxNylzKbFz6Me3Zk21BlbY
yGOPerFvDg15iFoE9LBCh1h33AfFObTOcszr4xwrVK2vn8xkmUOqu3szLKTY
oFzN9vXkl1kELQpEggYbvHQ76JP2fBbZ+p7p7DVhg63tT42rYmdRRPakcIA3
G5h8NyC87GdRguF2jY8RbHDFWkfpu8Esyu8KPMT2mA0cOUNOXVSjn7fQemQC
ZoPq+8vc9EaCpvIN0nt/0OWvvmf4OjGD2Ewjy1WH2ODqX0l+o84ZpBnOvfiB
nx2M7T10+97PoP1kSyE2RXbgaogwqMqeQU7F97da7GIH34RdpN5HMyh6jHSm
14UdPKSO74YLM6jPTqWd9Q07MF3c4/9m6wyizZ6dN69mh11BBf2HpWYQ790C
gYQOdmj+J7rLjf7u0P2ibarKwgEHtSO3lPZNo3iNvWXmNhxQ33nYWzhmGm3t
sN+nf4YD3PG2mJmAadRw/dwPtRAOqBvMUFF3mkZsbQ9GOf7jAHsBv/qv6tMo
JLSfXDHGAexOwu7Xa6eQuPJi9usNDnDTtfkj9moKFTdxaqUJbgKx1Iavdg+m
0JSCptkVnU1gweRjsdVpCp2uD7+sfX0ThH/K0PTsn0SMFx5wUB9vArWoj+X2
+ZMoRfr5A+HcTeBdF/FrT/AkavNtfDnduAl0A10usYpOogvkfp2evk1woL5J
OWxwAgl+Waj8Nr8JJob8LkiXTKBD4tJdL8icUNLHqaDsNoFGPml4JKpzQs9P
wW/7DCbQTS+T+ZsGnPBkw+3FgswEUhSxv3rRmhPSH73jfMg0gT6Xn+Vxc+eE
R1E+o9eGx9GJM+FPrIM54URSznP5X+NoVeCBotFtTvjh+HRn85dx9KQs+7VG
GicsTHX/GSobRztdy/Rl33DCxPFZ15J34+gHb2MtbxUnWPNcQdEl48jnfZ/N
WhsnlLuf1Y7/NI54Ti70jo5ywtg2wY6ZxnGUy8Xp/XudEy541gkXDoyjfUVS
yzUCXDB28L+Jwo1xNOCkEfVOgQueh5n+zpOdQBEcJoLPtLmga+9Oksq+CSRT
aJfywJQLHJoDtPz8JtAHh7Oq1xy54OLxHU+f/DeBjrGGF/v6cAER+vi3748J
tJh/39D5GhcMjidtv882iR7YZX8zf8QFdss9nqd3TSINprJj+jlcwC11g6Ls
OYm+vfg2qPaBC/5WlsbxPJ5EXjZ9fqRGLli/bOpnWD6JODbm1zn6uMCVXXOe
uXsSZT3fFLM4xwXi3iPZL+cmkeERKbFBdm5Y0XypeoJhCv1Z2Zbxk8QNNo29
n/3pfDnLeGvFFm5oNu5XYKXLS1jYlb0Gbqi4X6Ql1z6Jimle+9KsuGEfd+q9
868mkVV62I87btzApy705kDgJJo6eP/ElSBu6ByUIqlumUS355+NesVyQ9TA
9sFseryqqaUXj6VyA8sekWY/jwlUvf8b84FCbjipxVdkMTGOTs/03tX+wg1n
Tny7JXJyHDEmz5OpbdxwcURyPLdyDKWYbHouPMoN1ikdG8yiY0hvUlKLeZ0b
zm0zfyBrO4raE7YR0/w88CUvK44zcgQl/njBF6jIA1wLexal7g6jY7xKJ5Z3
8cAU6SH9BziEyAfS80PNeWCtdFg+2P0ffZ6UWmc6xQODmV32pJ2D6Gl5wqEb
F3nganZV9P7pAeS0JPSUK5YHjvWd+q3zpB/1eHPqCRfxwMDxmU71gh70X05k
TEItD7SLiyhtRd3o5ABDh2Q3D3x0ib3It/QbDdgvBimy80LhC0Fjn40faMh4
4N1Oe15IX/jMmJjwGuWEnWAvO8cLU923HEx2uSPP0t+2KIIXDJ9vvG5+UIDH
tjbN73vBC8UlOmFnpOvwFKl8u/0aL8hY22s26P7Br212XesS4AP9jZv/PrT0
Yr+4t80uVD4IVeExH2AZwHOsL3w9Lfigu/GnRZr2EKZNPX4V8h8fRE8mPw3v
nMQlakIbG0V8wKHK4C30bQoHu90xv17HBzsEYnLeZE3j1Y7r47GzfOBn3rnt
t94sduIKT+Fg4YcvR73uZa7OYvxcv8qUlx8WaEU7Pr2dw+H970UaKfygme7k
dYF3AfeEB+oLbOGH8oTza2YFC9hAWsvVSpsf9pRc2rdouoiZ7F+9bT3ID5mi
JqngRcMnF852Stjyg8Ngzqj0NA1X3FdlOe7MD0/lBzgtfJbw9W9ZVj0B/HD9
62DYFodlPOB1KoQSxg/OVe9uyFcvY5NNchmnb9H5SvzS8uYV/OxZd92z+/xA
5LM7dcSuYDbj5Jmhp/yg946xdHxwBbv12pPUnvPDxJ5z4cd3r+LqUDHDc4X8
oK72LsQqehXfLIm/N13FD82PX+++K76Gh2wtS7Y38cO9OQ41Dbs1fGCOp/dC
Bz+kdk5Zidxfw7n36jne/+UH8hdC+WztGubcemvb8iQ9XsOGW24ra9izYa+d
3jI/BNhuTdqhso7rPFjCQ1kEIE465yGn1TpWZf+cTfAKwNs6lieiQes4JjOs
kUlCANJHEq9GJ61jUy0PQRF5AZi+PGXGU7qOOSqP2ChtEYARljvqF36t4yor
vYRd2gLQ5X2qaGJ8HV/vV+w4aCAA7c5GCVnMG9jQn0/a6aAA1NDbT6XoBmZg
XnL2sRGAaEfq3gtKG7g8vi8j4oQA/f9uINKzYwNfpjQMPvAQAN1zSZybDTew
bmGRSra/APTzypSGmm1gmkHq2ZIrAvDt7k/qqvUGLm66+ar+hgCYFdzJrXLY
wBdc/Ga67gmAguXFP+vOG1hr2mHHVJIAxL7+HVNxegPPhJtcYnomAFM6J+M0
3DdwAf/WMuECAdjOcrjt1JkN7J0mvk4tpeej9aSZP503b2My2FUpANnl2dWB
dPkRPHrt4DcBkB4neK+5buDnFr+qHNsEIGRxoib35AZ2/1O+yadPAP7etghZ
d9rA1PPPzSLGBKA1QT8y9tgGHli/d/fBggDkcn+WdrHZwOl3QpqfMQiC7ra7
R6MsNrCztKtICacgqPbuEWM5sIGl883t6oUFgTHdXrrHYAN36uskdUkLwqcD
WuzSuhs48atc96SyIJT6s+zHGhvYzpFLjmm7IFxf4taqUN7AouNzp4T1BeE/
yFqjymzgn5e7n1H3CUJ4Z+m7v8Ib+HDy680HHejy5TuLbdbXMf/mpPOOroJQ
MbMUPzO9jr+VXS88f14QnF5vefhpYB3HHvSevxpEt4eoFm9a6PXRcVTnwTVB
cD5z1aC4ml4fXgYhz24LAm17Sk/xO3p9LKuWv38sCIafE5+kPlvHhqR1o64X
gpCgVCtZG76OGXL/RU0WCUL+h42xn17ruHxXUy0jIQiiNxpWnGzW8eXaUm7h
OkG49nBm8379dbzbPtOC+lMQrr7/+Py8/DpeHrodr9MtCF36DNOF7Ov4/aWL
v0yHBIFbI5Y2PryGtRJMHc6vCoKmwOs/b7LX8IySVspVNiFwfrijdjJiDRe8
k+q9zy8Erl9nKyId1rD3PnaFZyQhqGLwTzuosYa3tE65vVegs8J+O1GWNTzm
9junTl0IojNbNUt/rOLchYqxTh0hkLfZOcqZtoqpoo/9GA8JwTOF/7gZ1Ffx
QFZ4kdBRIfDOk75tOrmC03d40hRdhEBP1cDjzssVLG2jH2p6QQget3S9tSCt
4M4B6qfjYUIgMp8wG1C3jBMD+FnO3xIC6UPkgP4Ly1jsQf+t+0+FYDYl33v2
4xIWVyu6TnsmBDYhOvdlXZYw6XNUmGOBEPwUiz6avUHD0lMqF5QqhKDTPWbI
RJ2GZW+snI9tEIK5qAfilPJFTJH+6jn9SwjszR6V9exfxIpmPs5lQ0Jgeji2
MsF8AVP7DRxkZ4SAIpvj5FQ7j5WDhWwjV4SgP8eojz4P4M3Piw9a8ArDzJbQ
YS3xObydZW1n/3ZheMLkExMZOY21kr5p7NcXBpUHSZrTTVN4p2ba5ry9wvA5
P9LdRnwK6zobUS7aC0PD9wWjbdRxbPDhFg9XGH1d69AP6xuD2CJAdECzThi8
sosOnM9oxJZcQ92PfwjDs+5nLH8P1eAj6SXtq53CMKzveESS/xO2/X68sWpS
GNKGYgPF0h5jO3f1OrUlYThx75c5J3MqOra+URnHJAJxb7bobBYsQo6bM0qP
iYjA2VV//caD1cipIqAIS4tAaW1hgYXLV+R8bG+BgrIIiJZNPp9Ka0Knbw5n
TeiKgOLDNmvnra3ITaYszcpYBF6EBUedamhHZ4pjk94fEgHhzadmnpp1Iq+B
rfcinEXAs8BTLza4B50NYYz95yEC89e0n1rd6UXegj+izPxFILhxpYD1fh/y
ycm8+vqyCCRu0uG7cbMf+UHgZdEoEdgRX5hU6T2AAlr3XQy5KwIJ3VYf3pr8
RYHeEn49CSJw4IcDtuMZRJdYR8+apIvAyAGST/mXQRSU/ME994UIfID034zn
/6Hg7XdO8hWJwOmbXchi0xC6XHfCMaBcBCz/LO3++2AIhbpo2LVXi4C6X6GE
mOAwCqcxWe1pEoFqRX9Ti6vDKOLuz0MZv0VgbSJuXKB/GF2nPtvPMSACh8J/
7dnQHkFRHy8anRsXAb2nJ979Ch9BN6wP7GleEIFbGtRb/uUjiPT2G4mJURQ8
Vdg2l8+PoHwh60UNLlEIYdX+50MZRYb+7T9cRERhF+O3Sdm9o6il2angnowo
ZO/hl7p2chR5ag7EflIRheSshE0uQaNo7Z6Hx/R2UbiPLVxjYkdR3PSEidwe
Ufh3TzK37ukoUjgcQDm8XxQe7XnS0Jg/it4XLK2HHxEFmyqmR9RPo8iMP6yj
4LgoiH8O4FFrGUU951ne97iJwi2ZvE9Mk6PIv/HWA35fUVj4/lA0kXsMsW3l
84UQUXCXu6+YtXUMJd55cMgnUhQ4/n5yybAbQ+oTEqppd0WhQ32D9++NMfT5
UCrb9yeioDm0lnvv4xiyzVPo38gQhXoFoYf5S2NohDsXb80XhS+bjAMU9cZR
6NmtySfei8JsCS9v3fVxJNDw9tLdz6JwZY+Mx4kf4yhTTdcGN4iCcuqSRrLS
BNKJwRqTLaIwL3faXf3qBHI2rRsxHxWFmlON+6cNJ9FcjkV16LwoMGuvCHjl
TqIbm35l5G+IwqotlXOIcwrl1/w5zissBvvGKGohIVNobe/8t696YnDoezzv
z7PTKO5Z8Iu1vWLg2NkuXPhiGimwMdzcclgMPC6aM1iNTiOzL5wGt13FwKv8
qrnf2RmUaCT7xuyOGIRxhL747j+LdODg4/o/YuD0wHG2O3YeNaR+918ZFgOo
ocSUfZ9Hzhs2lmpzYnClbdv3OuEFdKPceVMMhzj8+F3j9uDpAmrRCwwx1RCH
OsWk3XKFi8h/138naiPEQV/YZjirewmZpvHOHYwVB4efc6N1UsuIwn755reH
4sCofzB7xWEZff9p+/rHc3GIPJDs9uznMnq+u9LEtlAcDhjFjeXxrqCwdI3f
bWXi4Pj42duuvStI3YebufubOJy5bBdQU7CCWFuDHju3icNiYWMZT98K6tT/
p9bfKw4Sb9KK4vhX0dtMa8J1VBzsa4aNJfRWUQzXZ+uhOXH474tPic/pVXTS
b+uw57o4WHeptbvcWkW67clXxtklgO3jybb3uatIADgFfQQkwO35TROjmlU0
9OzisxmSBEgzxY839q4izPNX94KCBKRMz35QX1xFjwKONC5ukYCqoKa0bRxr
yLsDnwrWlgCSq7JXtvAaMjHcQlsFCZD6J/DBVXINSeYkxoaZSoDcY86ZPTJr
aI6PQ47JWgIcD7XLsUutofrAC0XXHeny1u9F74usofSuvgPs7hKwf6+6w3v6
/kHGlt23fCSgI/zowUMLq8jyxUc/7mC6vvsZdZXuVaQsqMZ+95oE3D06ZqdA
rKKNSwlJArclQNP/hY148ipq+cO67cEjCTh91lG4x3cV5e/1rxRNk4BrMilS
dgarKDKvx+5JjgRstXtS68S5io4Lm4+T30jAn6LTl342rKDtIWVXUz5IwFA9
tS7p5gri7FMWlauSALX23h9P9FdQ3/5HuRmNEjCnK25ZPLqMSl4xI2q7BIxu
PKrqiF9GcaK+P5730fPTGZq7qLmMzlzpdlcbk4ALzCpey/VLSPRgSdy2DQlo
OLciHjlEQ+OvqYpvOEhAVST5rHrRUKX4g5IdgiSY5i3m2TVEr79B7z5dRRJI
VRc9W65bQKaHOgM/qpPARUg5OExjAVHeHuACHRKcYq1ZqI6bR9+vKmiZHCSB
Uq9vZ8auOZQ9dK+m2poEmQ9k72lem0WhFhvHTZ1IMCyjZRj0ZQZtkfodaeFL
go9XsgQWt08jluv7SM3BJJhcWTNmdJ5CnSNv862v0+1v31j7yjGJot/fbbV/
TIKHPFcrOL1GkYvMmldnGgk4wwY9blwbRjpRngwncklQO6Ix/TP6H/pnZaJy
+iMJrmxcFHc61Y+MJ5eDvftJ8IvYFH3s9E8UtP+B6qcxEoS2+nbXkRpR/n9b
fgstkACEr/DI6X1B4tbOu0o4yLBVoCuw0uUaGnv/ZZFZnQxboisTC9ubsZzg
iWxbbTJ81N5D1Trbim29aLY5QAaOGP0ne353YEJKrdjcigwHs+XFSQp9+H5E
XMCTS2TQTU27d+vTMK7pUFEYu0qGlKMP9b3DR/GqVsWPPTFkqNvfsbiwdRy7
/ZvXHHhKhivUrKr1bVM4Ce727cwmg9+OEzVnZqbw9yfK8bcKyBD2wWTHlZfT
WNfMYVq9ggzafLLsrzhn8fmsubSrDWRwejTmW5U/izPXb1v+/EWG7hjXT6EH
5zDva+JV0BAZvtz2SnnlPY+NOI+daJgmg3BS7h/R+Xl86dQsr8wKGZas7dbW
/BdwnwjVu5JHEp4zDbjoOCxisfNYSkxMEhpsGddvVCxisxq7rx6ykhC/voYt
FWj4qtzM5Q8qklCZGimScIWGi4NjNvNtl4QdSRDj1kjDoz8UOl30JEHabXN9
tcQSlt1SHvPWRBK+s8RF1x1fwjZRR3ezW0jCvZPznuEJSzj6z9SIvZ0kiGkG
Nq01LGGsE5340kUS9qZzvbdfXsJz9+RNNzwlQRbJXc6TXcYqox+WDgdIgg2z
Xr4wLGMnY9uczCuSwH/969+Xdsv4/tNJu8Uouj2xpeSHnsu4ZuEmh2mcJCwk
JYpN0d+faxaU98lPJCFFfMzuT/Ay1swpc59Ml4R1jhtqN4OWsTuTjZjhS0ko
VO7YI+C3jJMdJqoeFEmC6a0Qx4zTy7jp7Y3Af+WS4PJXEHscXsZsvHJU3RpJ
eP9536V4nWW82730V2yTJIjaaHBYkJaxD2EV+ee3JBg5tDP/WljCWRLjWpoD
kiC18KfN6dsS/u0XNXB9XBKGjZZSNv+3hPkaZB60LkhC5/Tw0PXzS9hYscRI
lUEKti+GXSnatYTzW0fTGwWlICO0zm3tMw33b4s8QpGUAsWYev7WCBoWj5Zm
uqAoBVOvDD24gX5eeoddSDpSYNdl+sP87SLe75Qyo20oBa0L7JKibouYN3z0
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
Zi1KaWYh3OKftD1Ng4rgafvZTSxMTj0TlH+GBs3iXIPS1yz8Gvo6QCyKBobH
XOJKGlho5a10aHcMDVRfbA/5+4qFKes8fGriaMCuU1e8RHiYU+Spn0ADqm9o
QirhZZq/XCPP02DUIELwk3DafOGWgSQaiIhTrt8i5337GbPBNoUGTZM18W3k
vg+tlzdmpNHg32XHF97EntqHpZtG0mlwPLrTcG8LC+9debF5+SUabNg2rNH/
loXZZ7qcUi/TgLZsVc5H4v85nzHnoavEXrfBte4dLAx2EHexzKFB8ruWUD8S
Tx+G6takPBKPvrlnVT+z0FmJvm3gOg1W1GR/9vnKwhUzbLfzb5J62zBv+W6S
H/Pera4JRTSwqbapUyf506g95NZ7iwbcpyPK10i+Fxad2cG+QwOJ6T1ys8TY
+Od8+s7YUhrItUyarpJh4+CRW+7d92kwKHW/9yzRV+vWZx7m5TTYt+XlsXe6
pL9YvfeMfEiDwJ43aw2Ifkt0v+9qf0zq1y1yzUFLNmZJzNlNqaTBL5fji0NJ
PR57Y7Ln3TMazM1risr2If2jXOhjXEODLOkcjS7STzdkbd4b+oIG2ZULF+wg
/djq9N59LXXEniaJBd8Sid69w/brN9DA+b/MRO8s0k/WXjgQ1EgDvn1tf911
Ns6n3zj4upkGO0+sG1G5Q/r94ieHtN/SYMB0WdTuCjLP/Gk5fPQdqW+B8dny
KjY2fRz0rXtP6mOJVI1GLRux+p+fegepv4y4PwWv2Fh4QzbAr4sGNXfnXNzR
zMaLCfpHaj4SfTufum3fSurJ3+Lo0l7i7zxP5eD3pF9tWX/s4GcaqJjapY+1
s3EneAU+HaCBwzcX5fJONtprBx1f8pUGBhIlb1u62Gghfi5o7zCpr1c7w1d2
s9HwW86JJ99psD750kl1wouby4PlftJgOCdw2IX8f+6DhpDdY+Q+//KnIuS8
0Yze0IcTNKh6//yvArmvO2wqTHqKBofKTFIut5F+uGvBKY9pGkT7fczNfsvG
ilVapx/8Jd8fz/XQIf7kU9jhkjPpsJIM0UYNbEyWX3PGbRYdjlz9mlJO3uNT
v3dE3J1Dh4trB9e3PWPjwa6ASLF5dLhaZG8d94S8D09joraK08GacvFoezmZ
t65fjr4lQYfDxW/l6++Sfun7ItZJmg4+2i2XbuSRfiSqei5fkQ5JX56zF0ST
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
f4dFvP4=
      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 30}, {-38.66372002163885, 3.0474836273871904`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.719027545581208*^9, 3.719027610041213*^9}, 
   3.719027663532459*^9, {3.7190276956442003`*^9, 3.719027788452837*^9}, 
   3.71902784816526*^9, 3.7190279379321485`*^9, 3.7190295531186604`*^9, 
   3.719110877196437*^9, {3.7191109672829523`*^9, 3.7191109951739454`*^9}, 
   3.71911103029886*^9, 3.719111611150191*^9, 3.719143422567766*^9, 
   3.7191563681368446`*^9, 3.7191563997511454`*^9, 3.7191564482312584`*^9, 
   3.719192169804552*^9, 3.7191922655358353`*^9, 3.7191924267732077`*^9, 
   3.7191925781331987`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
   "these", " ", "plots", " ", "come", " ", "out", " ", "different", " ", 
    "for", " ", "different", " ", "intial", " ", 
    RowBox[{"conditions", ".", " ", "the"}], " ", "behaviour", " ", "is", " ", 
    RowBox[{"chaotic", ".", " ", "as"}], " ", "we", " ", "make", " ", 
    SubscriptBox["m", "1"], " ", "much", " ", "larger", " ", "than", " ", 
    SubscriptBox["m", "2"]}], ",", " ", 
   RowBox[{"or", " ", 
    SubscriptBox["l", "1"], " ", "much", " ", "larger", " ", "than", " ", 
    SubscriptBox["l", 
     RowBox[{"2", ","}]], " ", "the", " ", "trajectory", " ", "of", " ", 
    "the", " ", "first", " ", "mass", " ", "approaches", " ", "that", " ", 
    "of", " ", "a", " ", "simple", " ", "pendulum"}], ",", " ", 
   RowBox[{
   "as", " ", "its", " ", "moment", " ", "of", " ", "inertia", " ", "becomes",
     " ", "large", "\[IndentingNewLine]", "the", " ", "same", " ", "holds", 
    " ", "for", " ", 
    SubscriptBox["m", "2"]}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.719152637847047*^9, 3.719152646956558*^9}, {
  3.7191920236786833`*^9, 3.719192117938205*^9}, {3.719192192510622*^9, 
  3.7191922338283253`*^9}, {3.719192468450014*^9, 3.7191925102046947`*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7191526520212955`*^9, 3.7191526601203117`*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.719152652318231*^9, 3.7191526589016266`*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7191526791226873`*^9, 3.719152680732153*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{
         SubscriptBox["\[PartialD]", 
          RowBox[{
           RowBox[{"\[Theta]1", "'"}], "[", "t", "]"}]], 
         "\[ScriptCapitalL]"}], ",", "t"}], "]"}], "\[Equal]", 
      RowBox[{
       SubscriptBox["\[PartialD]", 
        RowBox[{"\[Theta]1", "[", "t", "]"}]], "\[ScriptCapitalL]"}]}], ",", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{
         SubscriptBox["\[PartialD]", 
          RowBox[{
           RowBox[{"\[Theta]2", "'"}], "[", "t", "]"}]], 
         "\[ScriptCapitalL]"}], ",", "t"}], "]"}], "\[Equal]", 
      RowBox[{
       SubscriptBox["\[PartialD]", 
        RowBox[{"\[Theta]2", "[", "t", "]"}]], "\[ScriptCapitalL]"}]}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Theta]1", "''"}], "[", "t", "]"}], ",", 
     RowBox[{
      RowBox[{"\[Theta]2", "''"}], "[", "t", "]"}]}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "algebraically", " ", "solving", " ", "the", " ", "equations", " ", "of", 
    " ", "motion", " ", "for", " ", 
    RowBox[{
     RowBox[{"\[Theta]1", "''"}], "[", "t", "]"}], " ", "and", " ", 
    RowBox[{
     RowBox[{"\[Theta]2", "''"}], "[", "t", "]"}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.719143662904109*^9, 3.719143704017808*^9}, {
  3.719143822718773*^9, 3.719143854691738*^9}, {3.719151954106144*^9, 
  3.719151988569129*^9}, {3.719192604807455*^9, 3.719192642015293*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox["\[Theta]1", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "t", "]"}], "\[Rule]", 
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"g", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
           SubscriptBox["m", "1"]}], "+", 
          RowBox[{"g", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
           SubscriptBox["m", "2"]}], "-", 
          RowBox[{"g", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{
             RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
           SubscriptBox["m", "2"]}], "+", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{
             RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{
             RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], " ", 
           SubscriptBox["l", "1"], " ", 
           SubscriptBox["m", "2"], " ", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["\[Theta]1", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
          RowBox[{
           RowBox[{"Sin", "[", 
            RowBox[{
             RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], " ", 
           SubscriptBox["l", "2"], " ", 
           SubscriptBox["m", "2"], " ", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["\[Theta]2", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}], "2"]}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["l", "1"], " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["m", "1"], "+", 
            SubscriptBox["m", "2"], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"Cos", "[", 
               RowBox[{
                RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
             SubscriptBox["m", "2"]}]}], ")"}]}], ")"}]}], ")"}]}]}], ",", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[Theta]2", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "t", "]"}], "\[Rule]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"g", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{
           RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
           RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         SubscriptBox["m", "1"]}], "-", 
        RowBox[{"g", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         SubscriptBox["m", "1"]}], "+", 
        RowBox[{"g", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{
           RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
           RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         SubscriptBox["m", "2"]}], "-", 
        RowBox[{"g", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         SubscriptBox["m", "2"]}], "+", 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{
           RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
           RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], " ", 
         SubscriptBox["l", "1"], " ", 
         SubscriptBox["m", "1"], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]1", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{
           RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
           RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], " ", 
         SubscriptBox["l", "1"], " ", 
         SubscriptBox["m", "2"], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]1", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{
           RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
           RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{
           RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
           RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], " ", 
         SubscriptBox["l", "2"], " ", 
         SubscriptBox["m", "2"], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]2", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["l", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["m", "1"], "+", 
          SubscriptBox["m", "2"], "-", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"Cos", "[", 
             RowBox[{
              RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
           SubscriptBox["m", "2"]}]}], ")"}]}], ")"}]}]}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.719143681453148*^9, 3.7191438556291714`*^9, 
  3.719144158414255*^9, 3.7191519984774466`*^9, 3.7191531878412547`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"%", "[", 
   RowBox[{"[", "1", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7191438756158514`*^9, 3.7191438828191648`*^9}, {
  3.719144161148751*^9, 3.719144161804928*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["\[Theta]1", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       RowBox[{"g", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
        SubscriptBox["m", "1"]}], "+", 
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
          RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], " ", 
        SubscriptBox["m", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"g", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{
             RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], " ", 
           SubscriptBox["l", "1"], " ", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["\[Theta]1", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
          RowBox[{
           SubscriptBox["l", "2"], " ", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["\[Theta]2", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}], "2"]}]}], ")"}]}]}], 
      RowBox[{
       SubscriptBox["l", "1"], " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["m", "1"], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"Sin", "[", 
            RowBox[{
             RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
          SubscriptBox["m", "2"]}]}], ")"}]}]]}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[Theta]2", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{
      RowBox[{"Sin", "[", 
       RowBox[{
        RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
        RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["m", "1"], "+", 
           SubscriptBox["m", "2"]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"g", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}]}], "+", 
           RowBox[{
            SubscriptBox["l", "1"], " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["\[Theta]1", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}], "2"]}]}], ")"}]}], 
        "+", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{
           RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
           RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], " ", 
         SubscriptBox["l", "2"], " ", 
         SubscriptBox["m", "2"], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]2", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}]}], ")"}]}], 
     RowBox[{
      SubscriptBox["l", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["m", "1"], "+", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"Sin", "[", 
           RowBox[{
            RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
            RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
         SubscriptBox["m", "2"]}]}], ")"}]}]]}]}], "}"}]], "Output",
 CellChangeTimes->{3.7191438840222225`*^9, 3.719144164554969*^9, 
  3.7191520095806265`*^9, 3.7191531914663086`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[Phi]1", "''"}], "[", "t", "]"}], "=", 
  FractionBox[
   RowBox[{"-", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"g", " ", 
       SubscriptBox["m", "1"], 
       RowBox[{"\[Theta]1", "[", "t", "]"}]}], "+", 
      RowBox[{
       SubscriptBox["m", "2"], "g", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
         RowBox[{"\[Theta]2", "[", "t", "]"}]}], ")"}]}]}], ")"}]}], 
   RowBox[{
    SubscriptBox["l", "1"], 
    SubscriptBox["m", "1"]}]]}]], "Input",
 CellChangeTimes->{{3.7191442354524193`*^9, 3.719144347231233*^9}, {
  3.719144411612857*^9, 3.7191444468828173`*^9}, {3.7191926638925385`*^9, 
  3.7191927603865843`*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    RowBox[{"g", " ", 
     SubscriptBox["m", "1"], " ", 
     RowBox[{"\[Theta]1", "[", "t", "]"}]}], "+", 
    RowBox[{"g", " ", 
     SubscriptBox["m", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
       RowBox[{"\[Theta]2", "[", "t", "]"}]}], ")"}]}]}], 
   RowBox[{
    SubscriptBox["l", "1"], " ", 
    SubscriptBox["m", "1"]}]]}]], "Output",
 CellChangeTimes->{3.7191479858843546`*^9, 3.719152016895275*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[Phi]2", "''"}], "[", "t", "]"}], "=", 
  FractionBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
       RowBox[{"\[Theta]2", "[", "t", "]"}]}], ")"}], 
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["m", "2"], "+", 
       SubscriptBox["m", "1"]}], ")"}], "g"}], ")"}], 
   RowBox[{
    SubscriptBox["m", "1"], 
    SubscriptBox["l", "2"]}]]}]], "Input",
 CellChangeTimes->{{3.719147989790678*^9, 3.7191480143711147`*^9}, {
  3.71914805279752*^9, 3.719148065784047*^9}, {3.719148116273656*^9, 
  3.71914812857275*^9}, {3.719148259992967*^9, 3.7191482658384185`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"g", " ", 
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["m", "1"], "+", 
     SubscriptBox["m", "2"]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
     RowBox[{"\[Theta]2", "[", "t", "]"}]}], ")"}]}], 
  RowBox[{
   SubscriptBox["l", "2"], " ", 
   SubscriptBox["m", "1"]}]]], "Output",
 CellChangeTimes->{3.7191482668389387`*^9, 3.719152019832837*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"\[Phi]1", "''"}], "[", "t", "]"}], " ", "and", " ", 
    RowBox[{
     RowBox[{"\[Phi]2", "''"}], "[", "t", "]"}], " ", "are", " ", 
    RowBox[{
     RowBox[{"\[Theta]1", "''"}], "[", "t", "]"}], " ", "and", " ", 
    RowBox[{
     RowBox[{"\[Theta]2", "''"}], "[", "t", "]"}], " ", "respectively", " ", 
    "with", " ", "small", " ", "angle", " ", "approximation", " ", "and", " ",
     "the", " ", "first", " ", "derivatives", " ", "put", " ", "to", " ", 
    RowBox[{"zero", ".", "\[IndentingNewLine]", "we"}], " ", "can", " ", 
    "infer", " ", "that", " ", "the", " ", "matrix", " ", "M"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"a1", ",", "a2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"a3", ",", "a4"}], "}"}]}], "}"}], " ", "from", " ", "the", 
      " ", "above", " ", "2", " ", 
      RowBox[{"equations", ".", " ", "M"}], " ", "is", " ", "such", " ", 
      "that", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Theta]1", "''"}], "[", "t", "]"}], ",", 
        RowBox[{
         RowBox[{"\[Theta]2", "''"}], "[", "t", "]"}]}], "}"}]}], "\[Equal]", 
     RowBox[{
      FractionBox["1", "\[Alpha]"], " ", "M", " ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Theta]1", "[", "t", "]"}], ",", 
         RowBox[{"\[Theta]2", "[", "t", "]"}]}], "}"}], ".", " ", "Here"}], 
      " ", "\[Alpha]"}]}], "=", "1."}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.71919278429552*^9, 3.7191929621425457`*^9}, {
  3.7191948093355656`*^9, 3.719194840478794*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"M", "=", 
  RowBox[{
   FractionBox["g", 
    SubscriptBox["m", "1"]], 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox[
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["m", "1"], "+", 
           SubscriptBox["m", "2"]}], ")"}]}], 
        SubscriptBox["l", "1"]], ",", 
       FractionBox[
        SubscriptBox["m", "2"], 
        SubscriptBox["l", "1"]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox[
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["m", "1"], "+", 
          SubscriptBox["m", "2"]}], ")"}], 
        SubscriptBox["l", "2"]], ",", 
       FractionBox[
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["m", "1"], "+", 
           SubscriptBox["m", "2"]}], ")"}]}], 
        SubscriptBox["l", "2"]]}], "}"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.7191481887827196`*^9, 3.719148230724904*^9}, {
   3.7191482744172544`*^9, 3.719148324609567*^9}, {3.7191512921771264`*^9, 
   3.719151294924817*^9}, 3.7191513740931034`*^9, 3.719194437090789*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"g", " ", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["m", "1"], "+", 
          SubscriptBox["m", "2"]}], ")"}]}], 
       RowBox[{
        SubscriptBox["l", "1"], " ", 
        SubscriptBox["m", "1"]}]]}], ",", 
     FractionBox[
      RowBox[{"g", " ", 
       SubscriptBox["m", "2"]}], 
      RowBox[{
       SubscriptBox["l", "1"], " ", 
       SubscriptBox["m", "1"]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"g", " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["m", "1"], "+", 
         SubscriptBox["m", "2"]}], ")"}]}], 
      RowBox[{
       SubscriptBox["l", "2"], " ", 
       SubscriptBox["m", "1"]}]], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"g", " ", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["m", "1"], "+", 
          SubscriptBox["m", "2"]}], ")"}]}], 
       RowBox[{
        SubscriptBox["l", "2"], " ", 
        SubscriptBox["m", "1"]}]]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.71914833559615*^9, 3.7191513751242876`*^9, 
  3.7191520516727424`*^9, 3.7191911086355753`*^9, 3.7191944387782855`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"em", "=", 
  RowBox[{
   RowBox[{"FullSimplify", "[", 
    RowBox[{"Eigenvalues", "[", "M", "]"}], "]"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["m", "1"], "\[Rule]", "1"}], ",", 
     RowBox[{
      SubscriptBox["m", "2"], "\[Rule]", "1"}], ",", 
     RowBox[{
      SubscriptBox["l", "1"], "\[Rule]", "1"}], ",", 
     RowBox[{
      SubscriptBox["l", "2"], "\[Rule]", "1"}], ",", 
     RowBox[{"g", "\[Rule]", "9.8"}]}], "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "negatives", " ", "of", " ", "squares", " ", "of", " ", "normal", " ", 
    "mode", " ", 
    RowBox[{"frequencies", ".", " ", "one"}], " ", "comes", " ", "out", " ", 
    "to", " ", "be", " ", "high", " ", "whereas", " ", "the", " ", "other", 
    " ", "comes", " ", "out", " ", "to", " ", "be", " ", 
    RowBox[{"low", ".", " ", "the"}], " ", "mass", " ", "and", " ", "length", 
    " ", "can", " ", "be", " ", "varied", " ", "from", " ", "here"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.7191483410025043`*^9, 3.7191483442213564`*^9}, {
   3.7191485097301188`*^9, 3.719148516843457*^9}, 3.719148830489188*^9, {
   3.719148971875707*^9, 3.719149113519018*^9}, {3.719151327297885*^9, 
   3.7191513540347686`*^9}, {3.719151576624526*^9, 3.7191515787808094`*^9}, {
   3.7191527806388273`*^9, 3.7191528005450563`*^9}, {3.7191930076162157`*^9, 
   3.719193048605403*^9}, {3.7191930996591325`*^9, 3.7191931095342736`*^9}, {
   3.719194255397422*^9, 3.7191943063261547`*^9}, {3.719194481924124*^9, 
   3.719194528507106*^9}, {3.7191946967279363`*^9, 3.719194716855243*^9}, {
   3.71919478279976*^9, 3.7191948003490477`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "33.459292911256334`"}], ",", 
   RowBox[{"-", "5.740707088743668`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.71914834483069*^9, 3.719148518605217*^9, 3.71914883142669*^9, {
   3.719148974177538*^9, 3.7191489961329947`*^9}, 3.71914902812265*^9, {
   3.719149085597351*^9, 3.719149113893997*^9}, {3.7191513546284447`*^9, 
   3.7191513809056406`*^9}, 3.7191515798276157`*^9, 3.7191520596904936`*^9, {
   3.719152788261486*^9, 3.719152802482589*^9}, 3.719191114010643*^9, {
   3.7191930121005707`*^9, 3.7191930493397064`*^9}, {3.719193101206024*^9, 
   3.7191931102530355`*^9}, 3.7191942535379815`*^9, 3.7191943102480083`*^9, 
   3.719194446311982*^9, {3.7191945125046864`*^9, 3.719194529772681*^9}, 
   3.719194697571617*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"FullSimplify", "[", 
   RowBox[{"Eigenvectors", "[", "M", "]"}], "]"}], " ", "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SubscriptBox["m", "1"], "\[Rule]", "1"}], ",", 
    RowBox[{
     SubscriptBox["m", "2"], "\[Rule]", "1"}], ",", 
    RowBox[{
     SubscriptBox["l", "1"], "\[Rule]", "1"}], ",", 
    RowBox[{
     SubscriptBox["l", "2"], "\[Rule]", "1"}], ",", 
    RowBox[{"g", "\[Rule]", "9.8"}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"normal", " ", "modes"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.719148364520602*^9, 3.7191483681789317`*^9}, {
   3.7191485328277807`*^9, 3.7191485373590918`*^9}, {3.719148698365823*^9, 
   3.7191487916004753`*^9}, 3.71914912967531*^9, 3.719151404977751*^9, 
   3.7191930098506227`*^9, {3.719194314451275*^9, 3.7191943288441143`*^9}, 
   3.719194747156616*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", 
       SqrtBox["2"]]}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", 
      SqrtBox["2"]], ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7191483687569847`*^9, 3.719148538499729*^9, {3.7191487367564206`*^9, 
   3.7191487830243316`*^9}, 3.719148815368395*^9, 3.7191491303471107`*^9, 
   3.7191514080246553`*^9, 3.7191930256339836`*^9, 3.7191943300628138`*^9, 
   3.719194454530854*^9, {3.7191947229646263`*^9, 3.7191947496722527`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7191943578937674`*^9, 3.71919435809698*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sapprox11", "=", 
  RowBox[{"DSolve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"\[Theta]1", "''"}], "[", "t", "]"}], "\[Equal]", 
       RowBox[{
        RowBox[{"em", "[", 
         RowBox[{"[", "1", "]"}], "]"}], 
        RowBox[{"\[Theta]1", "[", "t", "]"}]}]}], ",", 
      RowBox[{
       RowBox[{"\[Theta]1", "[", "0", "]"}], "\[Equal]", 
       SubscriptBox["\[Theta]11", "0"]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Theta]1", "'"}], "[", "0", "]"}], "\[Equal]", "0"}]}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Theta]1", "[", "t", "]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "50"}], "}"}]}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{"higher", " ", "frequency", " ", "mode"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.7191515565439577`*^9, 3.719151662043471*^9}, 
   3.7191516995151467`*^9, {3.719151734845905*^9, 3.7191517774632254`*^9}, {
   3.7191518236626554`*^9, 3.719151826334545*^9}, {3.719151910191432*^9, 
   3.719151911347699*^9}, 3.7191520655548525`*^9, 3.71915276941991*^9, {
   3.719152807232684*^9, 3.7191528786437855`*^9}, 3.719152975323589*^9, {
   3.719193180700164*^9, 3.7191931833407717`*^9}, {3.71919326874063*^9, 
   3.719193280055238*^9}, 3.7191944600153227`*^9, {3.719194592733344*^9, 
   3.7191946293299475`*^9}, 3.719194688352744*^9, {3.719195018234561*^9, 
   3.719195048268302*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Theta]1", "[", "t", "]"}], "\[Rule]", 
    RowBox[{"1.`", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"5.7844008256047`", " ", "t"}], "]"}], " ", 
     SubscriptBox["\[Theta]11", "0"]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.719151748980238*^9, 3.719151832758312*^9}, 
   3.719151890160246*^9, 3.719152068929878*^9, 3.7191528903169966`*^9, 
   3.719152976557953*^9, 3.7191911263566666`*^9, 3.719193184637658*^9, 
   3.7191932887897296`*^9, 3.7191944689685535`*^9, 3.719194632298685*^9, 
   3.719194757187989*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sapprox12", "=", 
  RowBox[{"DSolve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"\[Theta]1", "''"}], "[", "t", "]"}], "\[Equal]", 
       RowBox[{
        RowBox[{"em", "[", 
         RowBox[{"[", "2", "]"}], "]"}], 
        RowBox[{"\[Theta]1", "[", "t", "]"}]}]}], ",", 
      RowBox[{
       RowBox[{"\[Theta]1", "[", "0", "]"}], "\[Equal]", 
       SubscriptBox["\[Theta]12", "0"]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Theta]1", "'"}], "[", "0", "]"}], "\[Equal]", "0"}]}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Theta]1", "[", "t", "]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "50"}], "}"}]}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{"lower", " ", "frequency", " ", "mode"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.719152960743167*^9, 3.719153019662855*^9}, {
   3.719193251972758*^9, 3.719193285711629*^9}, 3.7191944644216948`*^9, 
   3.71919466008259*^9, 3.7191946916652956`*^9, {3.7191950352056637`*^9, 
   3.7191950434557867`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Theta]1", "[", "t", "]"}], "\[Rule]", 
    RowBox[{"1.`", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"2.3959772721675945`", " ", "t"}], "]"}], " ", 
     SubscriptBox["\[Theta]12", "0"]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.7191530140988626`*^9, 3.7191530206002884`*^9}, 
   3.719191136872369*^9, 3.719193199624199*^9, 3.7191932928522773`*^9, 
   3.719194550275053*^9, {3.719194652519894*^9, 3.719194662832547*^9}, 
   3.719194760125534*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"we", " ", "get", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Theta]1", "''"}], "[", "t", "]"}], ",", 
       RowBox[{
        RowBox[{"\[Theta]2", "''"}], "[", "t", "]"}]}], "}"}]}], "\[Equal]", 
    RowBox[{"\[Lambda]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Theta]1", "[", "t", "]"}], ",", 
       RowBox[{"\[Theta]2", "[", "t", "]"}]}], "}"}], " ", "for", " ", "an", 
     " ", "eigenvalue", " ", "\[Lambda]"}]}], ",", " ", 
   RowBox[{
   "which", " ", "is", " ", "the", " ", "negative", " ", "square", " ", "of", 
    " ", "the", " ", "normal", " ", "mode", " ", 
    RowBox[{"frequency", ".", " ", "\[IndentingNewLine]", "thus"}], " ", 
    "for", " ", "small", " ", "angles", " ", "we", " ", "get", " ", 
    "behaviour", " ", "similar", " ", "to", " ", "simple", " ", "harmonic", 
    " ", 
    RowBox[{"motion", ".", " ", "i"}], " ", "have", " ", "plotted", " ", 
    "the", " ", "sum", " ", "of", " ", "high", " ", "and", " ", "low", " ", 
    "frequency", " ", "modes", " ", "below"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.7191943710835834`*^9, 3.7191944080258265`*^9}, {
  3.7191948589185543`*^9, 3.7191950136719303`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Alpha]1", "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[Theta]1", "[", "t", "]"}], "/.", 
         RowBox[{"Sapprox11", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], "+", 
      RowBox[{"\[Alpha]2", "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[Theta]1", "[", "t", "]"}], "/.", "Sapprox12"}], ")"}]}]}],
      "}"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Alpha]1", "\[Rule]", "2"}], ",", 
      RowBox[{"\[Alpha]2", "\[Rule]", "1.5"}], ",", 
      RowBox[{
       SubscriptBox["\[Theta]11", "0"], "\[Rule]", "0.001"}], ",", 
      RowBox[{
       SubscriptBox["\[Theta]12", "0"], "\[Rule]", "0.002"}]}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.719151754764019*^9, 3.7191518291470947`*^9}, {
  3.7191518861133137`*^9, 3.719151886425898*^9}, {3.7191520771977*^9, 
  3.7191520784008427`*^9}, {3.719152728290643*^9, 3.7191527416054344`*^9}, {
  3.7191528951784325`*^9, 3.719152916946434*^9}, {3.7191530262253847`*^9, 
  3.7191530461027684`*^9}, {3.719153266766808*^9, 3.7191533060278764`*^9}, {
  3.719156220774372*^9, 3.7191562538090687`*^9}, {3.7191572424039803`*^9, 
  3.7191572464352074`*^9}, {3.7191911693907814`*^9, 3.7191912074092693`*^9}, {
  3.7191912427576017`*^9, 3.719191294169346*^9}, {3.7191932082181706`*^9, 
  3.719193239956935*^9}, {3.719193303526103*^9, 3.7191933452187414`*^9}, {
  3.7191945802779293`*^9, 3.7191945837957115`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
Q1N+LoeIrsOX6kNeRxc98N+ro0KlEetQibqklujccBmZy5xksAHh+ZLbBJvt
8ads/tAnVhvwSOU+Xus4jYcat9057roBIRtEpvN9dnibyL4x38sb8FKIftVr
wQZHv9GJelOxQbufTdlucFliK+LlF967NuF91eJful0n8OqLGf7Xa5tglhIz
9H5dGgR+Lx81Y98CpozuAVKkPMix0TkOC21B5Z/jWsejDoGLPU8JQXELmFuG
PMbC1OAT035td88t+NmdoaW5WxfyLF2DeH9swdaPUMYfdWZQddknu7BvCzaY
IZpUag5tDwPrj05vwYfnwi/rciyA6TJiec5Mh2Iavs4tU6xApc3YrFuCDg2U
KQ2ls9lBwUWfUXlrOuTeebdHx8sR5OvZl2PO0CFX/cS3/z46Qj1TMfMfFzrE
WVKjdmmfE/QmDkgkkunQJzl2ouOgE4jln7H+d50O5eEYpYxTLlA6sOaKUuhQ
7coOLuUiF1Dflx2YmUGHON4VcxduuID9845EnXt0SL1+MPH7A1fIbjzVWFBL
hyo77w4JjbqBDPvkt+UGOrRJePLuibI7VBsl/Dn1kQ4p9Jwwn4tyh86OptWN
H3RI1+ZC3iWSBwj901Swm6JDxicWnqsqeMKDA70aZQt0SF6WSJilesLhwHBD
tnU6FLVjXlizwhMs1mo8KtnoUbf027xcJS9I5T6UR9xFj8TItcLc4t6wy+z7
Yy9perTcshGlbeUNZRnk6no5eiS9bc2bMcEbWsWftPsfo0dDpnceEua8wdH1
ZN87TXrEktyu77DHB6aK/02J6tOjyj8ss7IWPsCjKMnZYkGP3q02yho+9YG8
c42kXafp0QETn7HsLh848MpZMtSJHg28tuTxZPIFQ+07mlL+9MidQ5100dwX
umPVT4UH0SObiC1ifYgv+Hz+Zf/jAj3KTky5dSXXF+KsSCFRMfQo5PN4aegf
X9iWU3m1K5EeaZbvUHm26QsP/1jcVEijRxfMfmi6iPqByp65/NhseuSYIUi4
qeIHTZ43Sv/k06NnhyJYkbkf2Dw5WHukiB7pTmjf8/b1g+GZzx8Tn9Cj2Cju
y/zRfsBykWPwWA09Sjm4f6qv1A8ycPFsaj09qklw0uVs8IO9THp0o+/p0S5j
SZeKNj8o1x/k1vxMj+wH2Pz6+v1AOzFqe1YbPcqq8y66OesH7d927pv6SY+c
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
G212eOE7dkeFxLhEPfRKc7LJEzepBMrnBVAg7k7H+istB/DngV0R9ccosJ46
qZSesx/vyn9ZsPkEBSozg5I+7t2PL9o7tqSfpEB1qfnCqnEudn0ezNyfQYGP
Qsye6T1c3F1+8YXwZQrUhMu5x/dycFvUPN3gIZF/sfiSpFNOWEU92eTGIwpY
Jx0+qIodcdqPdWHrHlPgz86L7cdGHLCZ+5bnA88psP0g/YMn2OPmPc6hie8o
cImkG2r70hrXr7r/7MkEBVq0+Um7pE0w47nBxNZJCpy4qrTaRNcIxya8pp6b
oQB/Ll/BxXkv1v07FOK9UBrsH3P2Sqbtxvd711OXSUiD9Kvogz4Vmrjiaijf
WEEaBB5CumnpNFSwU4Xc4i5NfI+sFT4vbonqzUTjZzykYSxpDTd11hL1u30e
3uQtDeiUUofwf1aIFZdxPzFAGs7Xv+ftabJBhU1TDhAlDaYOlRuvCBxQkXn9
ucqz0nA7yiwi2ZKDmjjnhfqzpEHyperyuXoO+hos8JY4Lw0BRjvNn6i6I9mz
stv9L0lD1NuiZCMJLrrSldwpWyYN/9lPddvU70fF7laSOU+kYV4hznb3nCd6
yleMedosDcxGqpcVxwsNxS/++qeFyBdyaoFzvReSv3LntlW7NDSK8wz14r1R
yTDZRvyTNAiJPUx89tcHNc9M1O74Ig1VY09fiVr6omGxlzK+g9LQlslJJZf6
os1bYyeavktDculRz3MOPHQt5MuZ2GlpmK26HHL4qh9qTngwUzYnDdcolJs1
f/3QcEbm/j4hKvguvnHj8h5/pHDXcJv2EipUlaj0eH70R9dnr7eNryHwt8/v
mgkHohfiidrM9VR4OrBI9pBhIBqhuhWwSVQg/9daoZUSiBT1VvFv0KmgYX2C
WbwkCN04GrrKawsVeDozwa+OBKERHZe4o8pU2Mldfe/rhSCkOKE/fnkbFWLT
Z5T17gWha9y1bz9qUeF9StKOmu9BaFhq1uCfDhWay/5VdIkEo02vP1dLAxVu
KK3YqE4LRsWo8pzjHirIpLyzurovGA39yVkWaUSFs2ec3Gr2ByO5sriDWaZE
PkwWXh4ZjK5QLJ3bLYn+xXP1HS8Fo69vtFp+2VCBq/4i174qGG08wdBd5UCF
jrItC9OaglHh1BjNzI0KRm8/zV8dCkZfyrvS/LhUsLQ78uDYZDBiedctOHGA
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
9Hfy8E7fCSf0P6OjE9c=
      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 10}, {-0.004979573514977052, 0.004999999999998248}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7191562566862907`*^9, 3.719157246778962*^9, {3.719191208065539*^9, 
   3.7191912948723974`*^9}, 3.71919321117126*^9, 3.7191932451757*^9, 
   3.719193347828079*^9, 3.719194557322033*^9, 3.7191946745691833`*^9, 
   3.719194764094345*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.719152703943339*^9, 3.719152711961144*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.719152704224593*^9, 3.719152713617382*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.719152704412115*^9, 3.71915271499244*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7191911608102293`*^9, 3.7191911618438735`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[CapitalOmega]11", "=", 
  RowBox[{
   RowBox[{"\[Theta]1", "[", "t", "]"}], "/.", 
   RowBox[{"A", "[", 
    RowBox[{"[", "1", "]"}], "]"}], " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Theta]1", "[", "0", "]"}], "\[Equal]", 
      RowBox[{"Pi", "/", "2"}]}], ",", " ", 
     RowBox[{
      RowBox[{"\[Theta]2", "[", "0", "]"}], "\[Equal]", 
      RowBox[{"Pi", "/", "2"}]}], ",", " ", 
     RowBox[{"all", " ", "masses", " ", "and", " ", "lengths", " ", "unity"}],
      ",", " ", 
     RowBox[{"g", "\[Equal]", "9.8"}]}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.7191521829838552`*^9, 3.7191523253650923`*^9}, {
  3.719152509565685*^9, 3.719152509862563*^9}, {3.7191936603608513`*^9, 
  3.719193730588931*^9}}],

Cell[BoxData[
 RowBox[{
  TagBox[
   TemplateBox[{RowBox[{
       StyleBox[
        TagBox["InterpolatingFunction", "SummaryHead"], 
        "NonInterpretableSummary"], 
       StyleBox["[", "NonInterpretableSummary"], 
       DynamicModuleBox[{Typeset`open$$ = False}, 
        PanelBox[
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAnIW2B5tvrD6j10NU+yH5P0XRMWw0
Feo/9iuWkVBlg78FZS60Bi77PzaMkNESdfa/aslGZ8wwBEAvz7U5J2biP8qC
eNpvqQpA2SZ4DbTd9T8VebNxPtcQQPhGQFvO2O6/IB09Xc4dFECq4niN9VTi
vykcpROTqhdA7+Lzvnc/+j9wLA79xCYbQBEnCmWW97Q/EKmJTQBnHkBSRc1n
Qn78v1jAcTS49iBAgZn4eBf55D9V4qf19JsiQH/L64TPg+E/8YxeUOg4JEBA
SYGKgj+wvwxlhBD2+CVA/aBbfEEX5T9VczOECJsnQBb/IIB5t/i/Hq9RXTVg
KUCkESdb4inUv4Vz8M8YHStAN3Kf06lM8D8Zbhj2ALwsQHoYOsxMAdm/LZav
gQN+LkDv5/VipHLxvzj6Z2AFETBASf4XI1HD8D8ZwK8ylvQwQI9dHMAx9u6/
Scq3UQLUMUBOkgvOX6/gP49vhMpwpDJAvKrNXOns4L+Vqwh2bIYzQKbo1x4y
Xve/soJRe2pZNECH6tcjvlL6Px6eWs1DKDVAJCOJlG9+7r9KUBtSqgg2QPoo
HiqKaZy/jZ2gMBPaNkA85AcLXvfkv4+B3UEJvTdATJ0VPM1Jy7/hqdqf2ps4
QABAIbHyMu4/SW2cV65rOUAVoT6T4VPvv3HHFUIPTTpAZy2M+y/H4j+wvFOG
ch87QBOXpPK7le2/PvZRF7HtO0CEGm9gedH4v4zGB9t8zTxAuQwhFO1L4j/w
MYL4Sp49QC7ZKC+DiL0/FDS0SKaAPkBeuDpEnq3oP0/RqvIDVD9AzPUi/6pV
6b9t2bB0nhFAQLtm3OPVOOC/khVoiQGCQEDsODevGbvMP0KfAcvl6kBA3avb
lxLf579S9PalkFxBQPX+o1scF/k/imtMJynMQUBkUwcJwh+UP00whNVCNEJA
LWllPDMO979wwBcdI6VCQG0W8tLE4NI/H56NkYQOQ0CUM2d0QEH1P/WdY6zT
dUNA7vy7KWQx078raZVg6eVDQOExORgDhfS/7IGpQYBOREDs6ut+RpbqPw1m
Gbzdv0RA5aDx9wLn5D9WbOncKC9FQK57MuvQ7fe/KsCbKvWWRUCILixpfYvJ
v17fqRGIB0ZAx/3g7sqZ+j8dTJolnHBGQM126tzLzrq/PITm0nbiRkC9/vjE
wWP4v4PekiY/UkdAvg3nJw5n6j9VhiGniLpHQD5MQrS5g+k/h/kLwZgrSEAr
Jzy/wKr4v0W62AcqlUhAO5SJ9HObsL8+GeT4//9IQFYP6EXoePw/4MbUew==

                    "]]}}}, {}, {}}, {
                DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
                 AxesOrigin -> {0, 0}, 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, DisplayFunction -> Identity, 
                 PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                 All, DisplayFunction -> Identity, AspectRatio -> 1, 
                 Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Opacity[0.5], 
                   Thickness[Tiny], 
                   RGBColor[0.368417, 0.506779, 0.709798]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, GridLinesStyle -> Directive[
                   GrayLevel[0.5, 0.4]], ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                 Method -> {
                  "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                   AbsolutePointSize[6], "ScalingFunctions" -> None, 
                   "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                 PlotRange -> {{0., 50.}, {-1.7808250479468666`, 
                  1.779518387863353}}, PlotRangeClipping -> True, 
                 PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "50.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAnIW2B5tvrD6j10NU+yH5P0XRMWw0
Feo/9iuWkVBlg78FZS60Bi77PzaMkNESdfa/aslGZ8wwBEAvz7U5J2biP8qC
eNpvqQpA2SZ4DbTd9T8VebNxPtcQQPhGQFvO2O6/IB09Xc4dFECq4niN9VTi
vykcpROTqhdA7+Lzvnc/+j9wLA79xCYbQBEnCmWW97Q/EKmJTQBnHkBSRc1n
Qn78v1jAcTS49iBAgZn4eBf55D9V4qf19JsiQH/L64TPg+E/8YxeUOg4JEBA
SYGKgj+wvwxlhBD2+CVA/aBbfEEX5T9VczOECJsnQBb/IIB5t/i/Hq9RXTVg
KUCkESdb4inUv4Vz8M8YHStAN3Kf06lM8D8Zbhj2ALwsQHoYOsxMAdm/LZav
gQN+LkDv5/VipHLxvzj6Z2AFETBASf4XI1HD8D8ZwK8ylvQwQI9dHMAx9u6/
Scq3UQLUMUBOkgvOX6/gP49vhMpwpDJAvKrNXOns4L+Vqwh2bIYzQKbo1x4y
Xve/soJRe2pZNECH6tcjvlL6Px6eWs1DKDVAJCOJlG9+7r9KUBtSqgg2QPoo
HiqKaZy/jZ2gMBPaNkA85AcLXvfkv4+B3UEJvTdATJ0VPM1Jy7/hqdqf2ps4
QABAIbHyMu4/SW2cV65rOUAVoT6T4VPvv3HHFUIPTTpAZy2M+y/H4j+wvFOG
ch87QBOXpPK7le2/PvZRF7HtO0CEGm9gedH4v4zGB9t8zTxAuQwhFO1L4j/w
MYL4Sp49QC7ZKC+DiL0/FDS0SKaAPkBeuDpEnq3oP0/RqvIDVD9AzPUi/6pV
6b9t2bB0nhFAQLtm3OPVOOC/khVoiQGCQEDsODevGbvMP0KfAcvl6kBA3avb
lxLf579S9PalkFxBQPX+o1scF/k/imtMJynMQUBkUwcJwh+UP00whNVCNEJA
LWllPDMO979wwBcdI6VCQG0W8tLE4NI/H56NkYQOQ0CUM2d0QEH1P/WdY6zT
dUNA7vy7KWQx078raZVg6eVDQOExORgDhfS/7IGpQYBOREDs6ut+RpbqPw1m
Gbzdv0RA5aDx9wLn5D9WbOncKC9FQK57MuvQ7fe/KsCbKvWWRUCILixpfYvJ
v17fqRGIB0ZAx/3g7sqZ+j8dTJolnHBGQM126tzLzrq/PITm0nbiRkC9/vjE
wWP4v4PekiY/UkdAvg3nJw5n6j9VhiGniLpHQD5MQrS5g+k/h/kLwZgrSEAr
Jzy/wKr4v0W62AcqlUhAO5SJ9HObsL8+GeT4//9IQFYP6EXoePw/4MbUew==

                    "]]}}}, {}, {}}, {
                DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
                 AxesOrigin -> {0, 0}, 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, DisplayFunction -> Identity, 
                 PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                 All, DisplayFunction -> Identity, AspectRatio -> 1, 
                 Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Opacity[0.5], 
                   Thickness[Tiny], 
                   RGBColor[0.368417, 0.506779, 0.709798]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, GridLinesStyle -> Directive[
                   GrayLevel[0.5, 0.4]], ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                 Method -> {
                  "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                   AbsolutePointSize[6], "ScalingFunctions" -> None, 
                   "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                 PlotRange -> {{0., 50.}, {-1.7808250479468666`, 
                  1.779518387863353}}, PlotRangeClipping -> True, 
                 PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "50.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
         Baseline], DynamicModuleValues :> {}], 
       StyleBox["]", "NonInterpretableSummary"]}]},
    "CopyTag",
    DisplayFunction->(#& ),
    InterpretationFunction->("InterpolatingFunction[{{0., 50.}}, <>]"& )],
   False,
   Editable->False,
   SelectWithContents->True,
   Selectable->False], "[", "t", "]"}]], "Output",
 CellChangeTimes->{{3.719152312909712*^9, 3.7191523268585405`*^9}, 
   3.7191524140348415`*^9, 3.7191525124094076`*^9, 3.719153342131476*^9, 
   3.7191534503910418`*^9, 3.719156319110139*^9, 3.7191564571219997`*^9, 
   3.7191574682911377`*^9, 3.7191935079387193`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[CapitalOmega]12", "=", 
  RowBox[{
   RowBox[{"\[Theta]1", "[", "t", "]"}], "/.", 
   RowBox[{"A", " ", "[", 
    RowBox[{"[", "1", "]"}], "]"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Theta]1", "[", "0", "]"}], "\[Rule]", 
      RowBox[{"Pi", "/", "3"}]}], ",", 
     RowBox[{
      RowBox[{"\[Theta]2", "[", "0", "]"}], "\[Equal]", 
      RowBox[{"Pi", "/", "2"}]}], ",", " ", 
     RowBox[{"all", " ", "masses", " ", "and", " ", "lengths", " ", "unity"}],
      ",", " ", 
     RowBox[{"g", "\[Equal]", "9.8"}]}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.7191522306867514`*^9, 3.719152232546152*^9}, {
  3.7191523169254637`*^9, 3.7191523223337965`*^9}, {3.7191523639501643`*^9, 
  3.7191524033160133`*^9}, {3.7191525146126337`*^9, 3.7191525149095135`*^9}, {
  3.7191534449847107`*^9, 3.7191534469066997`*^9}, {3.719193685503829*^9, 
  3.7191936859257116`*^9}, {3.7191937389171796`*^9, 3.7191937399796944`*^9}}],

Cell[BoxData[
 RowBox[{
  TagBox[
   TemplateBox[{RowBox[{
       StyleBox[
        TagBox["InterpolatingFunction", "SummaryHead"], 
        "NonInterpretableSummary"], 
       StyleBox["[", "NonInterpretableSummary"], 
       DynamicModuleBox[{Typeset`open$$ = False}, 
        PanelBox[
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAnIW2B5tvrD5JOy04UsHwP0XRMWw0
Feo/yl9w4VuFuL8FZS60Bi77P2lwP+CJAue/aslGZ8wwBEBu09VWsajlP8qC
eNpvqQpAyw9l7TAE2T8VebNxPtcQQBYTVjNBY+2/IB09Xc4dFEBsbqlXFSu0
vykcpROTqhdAl0R/63jY5z9wLA79xCYbQDIxPs0OIOG/EKmJTQBnHkDDyRnC
nGjev1jAcTS49iBAoMTbhLJ96T9V4qf19JsiQAUzUvbloNE/8YxeUOg4JEAG
loZcBDr2vwxlhBD2+CVASKxD6Fyg2D9VczOECJsnQOqlB5w+9d8/Hq9RXTVg
KUBxwJBBp6/1v4Vz8M8YHStAmZbnvIExxD8Zbhj2ALwsQBAombNmjPE/LZav
gQN+LkB8hBXx3iXkvzj6Z2AFETBAaUqyIpA14b8ZwK8ylvQwQAquVVrbgPQ/
Scq3UQLUMUDL/V4xyprAv49vhMpwpDJA1aom4GGc8r+Vqwh2bIYzQK7WbPxB
nuI/soJRe2pZNEAbKLLpxSzjPx6eWs1DKDVAQbSHBWHy8b9KUBtSqgg2QOg3
mraJJJS/jZ2gMBPaNkBBcII9KLz0P4+B3UEJvTdAbmu+8DgF2b/hqdqf2ps4
QGZqOM65NOe/SW2cV65rOUCTGH3aaerwP3HHFUIPTTpA7yBcTXbcwD+wvFOG
ch87QGWp+M78Gfa/PvZRF7HtO0A+2eLFsS7SP4zGB9t8zTxAS/bjJibY6z/w
MYL4Sp49QNUCKRnXu+2/FDS0SKaAPkBOUYduSHjDv0/RqvIDVD9ApD+gzKrk
9T9t2bB0nhFAQNsjnUhAktm/khVoiQGCQEDaQvgR3DPmv0KfAcvl6kBAz5dP
lYAL6D9S9PalkFxBQHlxNEnTMsY/imtMJynMQUDeazo95Ubwv00whNVCNEJA
Jf2r+FrayT9wwBcdI6VCQDZ/Anjsp+o/H56NkYQOQ0DJETSYT4rmv/WdY6zT
dUNA+pwi5MrB3L8raZVg6eVDQCbkudUo2/A/7IGpQYBOREAovjthd6q0vw1m
Gbzdv0RAZ7Uyz91G8L9WbOncKC9FQFoQn22cyuY/KsCbKvWWRUCOKGbVPTjc
P17fqRGIB0ZA8J4GAu8e878dTJolnHBGQBcLj0dXQcY/PITm0nbiRkC3YzVU
MBXvP4PekiY/UkdAuvn3D6jZ6L9VhiGniLpHQJuiArlP49a/h/kLwZgrSEAe
AJh0jsPyP0W62AcqlUhA+HjOTwSo0r8+GeT4//9IQD7OdtBTuue/06PM9Q==

                    "]]}}}, {}, {}}, {
                DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
                 AxesOrigin -> {0, 0}, 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, DisplayFunction -> Identity, 
                 PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                 All, DisplayFunction -> Identity, AspectRatio -> 1, 
                 Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Opacity[0.5], 
                   Thickness[Tiny], 
                   RGBColor[0.368417, 0.506779, 0.709798]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, GridLinesStyle -> Directive[
                   GrayLevel[0.5, 0.4]], ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                 Method -> {
                  "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                   AbsolutePointSize[6], "ScalingFunctions" -> None, 
                   "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                 PlotRange -> {{0., 50.}, {-1.3891643156324576`, 
                  1.368326949424934}}, PlotRangeClipping -> True, 
                 PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "50.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAnIW2B5tvrD5JOy04UsHwP0XRMWw0
Feo/yl9w4VuFuL8FZS60Bi77P2lwP+CJAue/aslGZ8wwBEBu09VWsajlP8qC
eNpvqQpAyw9l7TAE2T8VebNxPtcQQBYTVjNBY+2/IB09Xc4dFEBsbqlXFSu0
vykcpROTqhdAl0R/63jY5z9wLA79xCYbQDIxPs0OIOG/EKmJTQBnHkDDyRnC
nGjev1jAcTS49iBAoMTbhLJ96T9V4qf19JsiQAUzUvbloNE/8YxeUOg4JEAG
loZcBDr2vwxlhBD2+CVASKxD6Fyg2D9VczOECJsnQOqlB5w+9d8/Hq9RXTVg
KUBxwJBBp6/1v4Vz8M8YHStAmZbnvIExxD8Zbhj2ALwsQBAombNmjPE/LZav
gQN+LkB8hBXx3iXkvzj6Z2AFETBAaUqyIpA14b8ZwK8ylvQwQAquVVrbgPQ/
Scq3UQLUMUDL/V4xyprAv49vhMpwpDJA1aom4GGc8r+Vqwh2bIYzQK7WbPxB
nuI/soJRe2pZNEAbKLLpxSzjPx6eWs1DKDVAQbSHBWHy8b9KUBtSqgg2QOg3
mraJJJS/jZ2gMBPaNkBBcII9KLz0P4+B3UEJvTdAbmu+8DgF2b/hqdqf2ps4
QGZqOM65NOe/SW2cV65rOUCTGH3aaerwP3HHFUIPTTpA7yBcTXbcwD+wvFOG
ch87QGWp+M78Gfa/PvZRF7HtO0A+2eLFsS7SP4zGB9t8zTxAS/bjJibY6z/w
MYL4Sp49QNUCKRnXu+2/FDS0SKaAPkBOUYduSHjDv0/RqvIDVD9ApD+gzKrk
9T9t2bB0nhFAQNsjnUhAktm/khVoiQGCQEDaQvgR3DPmv0KfAcvl6kBAz5dP
lYAL6D9S9PalkFxBQHlxNEnTMsY/imtMJynMQUDeazo95Ubwv00whNVCNEJA
Jf2r+FrayT9wwBcdI6VCQDZ/Anjsp+o/H56NkYQOQ0DJETSYT4rmv/WdY6zT
dUNA+pwi5MrB3L8raZVg6eVDQCbkudUo2/A/7IGpQYBOREAovjthd6q0vw1m
Gbzdv0RAZ7Uyz91G8L9WbOncKC9FQFoQn22cyuY/KsCbKvWWRUCOKGbVPTjc
P17fqRGIB0ZA8J4GAu8e878dTJolnHBGQBcLj0dXQcY/PITm0nbiRkC3YzVU
MBXvP4PekiY/UkdAuvn3D6jZ6L9VhiGniLpHQJuiArlP49a/h/kLwZgrSEAe
AJh0jsPyP0W62AcqlUhA+HjOTwSo0r8+GeT4//9IQD7OdtBTuue/06PM9Q==

                    "]]}}}, {}, {}}, {
                DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
                 AxesOrigin -> {0, 0}, 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, DisplayFunction -> Identity, 
                 PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                 All, DisplayFunction -> Identity, AspectRatio -> 1, 
                 Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Opacity[0.5], 
                   Thickness[Tiny], 
                   RGBColor[0.368417, 0.506779, 0.709798]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, GridLinesStyle -> Directive[
                   GrayLevel[0.5, 0.4]], ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                 Method -> {
                  "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                   AbsolutePointSize[6], "ScalingFunctions" -> None, 
                   "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                 PlotRange -> {{0., 50.}, {-1.3891643156324576`, 
                  1.368326949424934}}, PlotRangeClipping -> True, 
                 PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "50.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
         Baseline], DynamicModuleValues :> {}], 
       StyleBox["]", "NonInterpretableSummary"]}]},
    "CopyTag",
    DisplayFunction->(#& ),
    InterpretationFunction->("InterpolatingFunction[{{0., 50.}}, <>]"& )],
   False,
   Editable->False,
   SelectWithContents->True,
   Selectable->False], "[", "t", "]"}]], "Output",
 CellChangeTimes->{{3.7191524055659657`*^9, 3.719152425987556*^9}, {
   3.7191525159406967`*^9, 3.7191525295263367`*^9}, 3.719153368120654*^9, 
   3.7191534262480426`*^9, 3.719153462121071*^9, 3.7191563403051014`*^9, 
   3.719156469629424*^9, 3.719157485918403*^9, 3.7191935310504646`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Abs", "[", 
    RowBox[{"\[CapitalOmega]12", "-", "\[CapitalOmega]11"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "50"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Plot", " ", 
     RowBox[{
      SuperscriptBox["\[Theta]1", 
       RowBox[{"(", "2", ")"}]], "[", "t", "]"}]}], "-", 
    RowBox[{
     SuperscriptBox["\[Theta]1", 
      RowBox[{"(", "1", ")"}]], "[", "t", "]"}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.7191524728016043`*^9, 3.7191524997196255`*^9}, {
  3.7191525453241773`*^9, 3.719152586690696*^9}, {3.7191533953548155`*^9, 
  3.719153396745537*^9}, {3.7191565519505653`*^9, 3.719156568687189*^9}, {
  3.719156716007234*^9, 3.7191567747517366`*^9}, {3.7191568495465064`*^9, 
  3.71915720920236*^9}, {3.719157335736346*^9, 3.719157422918019*^9}, {
  3.7191574950799894`*^9, 3.719157498988328*^9}, {3.7191575451816263`*^9, 
  3.7191576991488066`*^9}, {3.719193464902768*^9, 3.7191934730122643`*^9}, {
  3.719193585104145*^9, 3.7191936515169697`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
//+z0wSzUsNhRvr7l22vZ1CvNPnbm41DoKCn5dV10+i1krDSJxIHJsboH6mY
QEKHV3b8UsfB8NceAReq/76jNuXJPI6DQFutjPHuEaR3vLKarY1DiBcufUC4
HxXq5Dhb6OJg+qDwP7VjvUjCMHbLHX0czkwz8P1xXcjX5GFJggEO6p9CThvh
P9CUuYvlh1PUfWkeHp8TviNjazPeHiMclPgThA/rN6Iye41s2hkc0rifN3/X
qEPBrmJLquY4+P6Sykmz+IAW3FY/M7PAYe7UyRn26zxk7jV39LYlDowbQTvX
h8Wiyns9Y7HWOHC8shIZNY9G+x5Vh5bY4nCjOiPBfzkPRQTnq3RewGHrQ+55
84tliPbkWdfyRRzCUhXKbHi+ovqE6zLoMqXPK/+U+4lmxM+Rm698haon3Biv
PNuGdI0nMMWrOEgZR4ofvvwTNay3PiNzAwfz8hCVTYU9qPmuvv9WLxwsWzyS
SqJ+o3YruYnZIBzmm7f9JTJmkFCZndtkCA6NyZxey32zyET0+cqxMBys61Tu
qovOox8t28T6InDwrygIcvD/i4QPnErvisTBqW5iD7xfRKaBIcod0RQ+1lEb
y4b/oc6jPLoN8ThcCOPMcRbkANEk/GfNM0pvrebPI6I4wIzmaVeVhMP9Hlcp
EOWE7oI5r9JUHPh3j3/pFKCB+EYFvuI0qh77nx2X7tDA4rJDZH46Dh1hvuGJ
1Pv4a0/f68xsHLQ3hCx6Z9BB8t521bTXOHQttm9bwcUAy17jr89zKX5X3eCt
pfr95xB+KuENDnXnE22+RjNgIPLbr+gCHNyL5t3GOhkgNb/GKaKQ4ptjtG6H
EBNs9NWXQotx4F67rs9UiwmpWXcfBJbggLLlaX5uVL6sfr/Br5TiT9RbMDKB
CbttF+PvleFwrlAn4UYpE+w+Ke298wkHbEgvf3MrE9LELr/1+IyDwpz7yLkh
Jgy7pxM3Kik9i5ecJSaZIN02+M3lCw7Vzzs+Zk4xwV5px1mnaspPIkdtfUeZ
kB58dti+FofghxzwqZMJo2NPXW3qcXDZvqv/aBUTZDWaGecbcNiXXpZLS2eC
QzJ/4NkmKn/ObStru0f1VwzNbcYtOOyM/zz4zogJ42fvpxi04nDgm0HtE0km
yBeVHdBtx+GhWto/3UEGOG3mKNX8gYNjovVkC5UX2VdUNNU7cRhztLUToPq7
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
gPRMx9nlZRLmBdbzrdzDgP8BMQKA+w==
      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 50}, {0., 2.9596227148393686`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.719156704157897*^9, 3.719156779595479*^9}, {
   3.719156857817455*^9, 3.719156869851124*^9}, {3.7191569335445127`*^9, 
   3.7191569906666064`*^9}, {3.71915705071924*^9, 3.719157210499236*^9}, {
   3.719157344220874*^9, 3.7191574241836386`*^9}, {3.7191574897361593`*^9, 
   3.719157500753893*^9}, {3.7191575466971965`*^9, 3.7191577007512894`*^9}, 
   3.7191934749340873`*^9, 3.719193561771468*^9, {3.7191935923541737`*^9, 
   3.7191936045418806`*^9}}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.71911136708016*^9, 3.7191113689574814`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[CapitalOmega]21", "=", 
  RowBox[{
   RowBox[{"\[Theta]2", "[", "t", "]"}], "/.", 
   RowBox[{"A", "[", 
    RowBox[{"[", "1", "]"}], "]"}], " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Theta]1", "[", "0", "]"}], "\[Equal]", 
      RowBox[{"Pi", "/", "2"}]}], ",", " ", 
     RowBox[{
      RowBox[{"\[Theta]2", "[", "0", "]"}], "\[Equal]", 
      RowBox[{"Pi", "/", "2"}]}], ",", " ", 
     RowBox[{"all", " ", "masses", " ", "and", " ", "lengths", " ", "unity"}],
      ",", " ", 
     RowBox[{"g", "\[Equal]", "9.8"}]}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.719193763685122*^9, 3.719193785421975*^9}, {
   3.719193914641651*^9, 3.7191939345037775`*^9}, 3.7191939805870705`*^9, 
   3.719194198158146*^9}],

Cell[BoxData[
 RowBox[{
  TagBox[
   TemplateBox[{RowBox[{
       StyleBox[
        TagBox["InterpolatingFunction", "SummaryHead"], 
        "NonInterpretableSummary"], 
       StyleBox["[", "NonInterpretableSummary"], 
       DynamicModuleBox[{Typeset`open$$ = False}, 
        PanelBox[
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAnIW2B5tvvD4YLURU+yH5P0XRMWw0
Ffo/sXKsp6cZ978FZS60Bi4LQATnQK/zMu4/aslGZ8wwFEDM3jjEQb/xv8qC
eNpvqRpAVjSP0i+95z8VebNxPtcgQNkGKoxw4N4/IB09Xc4dJEDwUQDXYevv
vykcpROTqidABYi6yKZyGsBwLA79xCYrQH3u2qXipQzAEKmJTQBnLkChqMUM
8usjwFjAcTS49jBAx6YDuAMOMsBV4qf19JsyQESkQ2SDHzrA8YxeUOg4NEBY
fkmYCxs5wAxlhBD2+DVAjXpAedSAPcBVczOECJs3QEaYJ84grj/AHq9RXTVg
OUAAMHt1isg+wIVz8M8YHTtAEIfddXk1Q8AZbhj2ALw8QNUP7ng9vULALZav
gQN+PkD4T1FaYQlCwDj6Z2AFEUBAzuC+hJy2RMAZwK8ylvRAQEUNr8Rn2UXA
Scq3UQLUQUBUxgU8W05FwI9vhMpwpEJAPACIEcKUScCVqwh2bIZDQA2IMNBw
60zAsoJRe2pZREBLGd3PK6VKwB6eWs1DKEVAAjLPzR7oSMBKUBtSqghGQNvd
V5+vUErAjZ2gMBPaRkDkdg7X6cRIwI+B3UEJvUdAMgw2KNMvSsDhqdqf2ptI
QDhNIiVsEknASW2cV65rSUAu1HgTV/pIwHHHFUIPTUpAViyBkH+JR8CwvFOG
ch9LQD1Z23C+BUbAPvZRF7HtS0DQuQLpspdGwIzGB9t8zUxAH+pTZKstQsDw
MYL4Sp5NQFj7ugqvgj3AFDS0SKaATkBPAIrbsh5BwE/RqvIDVE9ADH3Pu70l
OMBt2bB0nhFQQEazhpt3LzrAkhVoiQGCUECNTujUbBI4wEKfAcvl6lBA3kPu
sN2bOsBS9PalkFxRQBMp2xt9qDvAimtMJynMUUAPWHiBMu4/wE0whNVCNFJA
S1sVPs1ePMBwwBcdI6VSQIRmot/EjzXAH56NkYQOU0BhFrYgmUU8wPWdY6zT
dVNAXsxpGH/9P8AraZVg6eVTQOPvFV+NMzzA7IGpQYBOVEDoBdNcdYJAwA1m
Gbzdv1RAQDPhb9U2RsBWbOncKC9VQHW7eZRYkEnAKsCbKvWWVUAerhWFNXRI
wF7fqRGIB1ZASOft9I3wScAdTJolnHBWQLFw3U1umkTAPITm0nbiVkCHqU3E
1+ZCwIPekiY/UldAPzXbtZAtQ8BVhiGniLpXQO7QNQM/fkPAh/kLwZgrWEAJ
RYAhuvk+wEW62AcqlVhAbSeD6cA+QMA+GeT4//9YQCuTji27qT7AZ165kQ==

                    "]]}}}, {}, {}}, {
                DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
                 AxesOrigin -> {0, 0}, 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, DisplayFunction -> Identity, 
                 PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                 All, DisplayFunction -> Identity, AspectRatio -> 1, 
                 Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Opacity[0.5], 
                   Thickness[Tiny], 
                   RGBColor[0.368417, 0.506779, 0.709798]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, GridLinesStyle -> Directive[
                   GrayLevel[0.5, 0.4]], ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                 Method -> {
                  "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                   AbsolutePointSize[6], "ScalingFunctions" -> None, 
                   "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                 PlotRange -> {{0., 100.}, {-57.83938028688144, 
                  1.5707963267948966`}}, PlotRangeClipping -> True, 
                 PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAnIW2B5tvvD4YLURU+yH5P0XRMWw0
Ffo/sXKsp6cZ978FZS60Bi4LQATnQK/zMu4/aslGZ8wwFEDM3jjEQb/xv8qC
eNpvqRpAVjSP0i+95z8VebNxPtcgQNkGKoxw4N4/IB09Xc4dJEDwUQDXYevv
vykcpROTqidABYi6yKZyGsBwLA79xCYrQH3u2qXipQzAEKmJTQBnLkChqMUM
8usjwFjAcTS49jBAx6YDuAMOMsBV4qf19JsyQESkQ2SDHzrA8YxeUOg4NEBY
fkmYCxs5wAxlhBD2+DVAjXpAedSAPcBVczOECJs3QEaYJ84grj/AHq9RXTVg
OUAAMHt1isg+wIVz8M8YHTtAEIfddXk1Q8AZbhj2ALw8QNUP7ng9vULALZav
gQN+PkD4T1FaYQlCwDj6Z2AFEUBAzuC+hJy2RMAZwK8ylvRAQEUNr8Rn2UXA
Scq3UQLUQUBUxgU8W05FwI9vhMpwpEJAPACIEcKUScCVqwh2bIZDQA2IMNBw
60zAsoJRe2pZREBLGd3PK6VKwB6eWs1DKEVAAjLPzR7oSMBKUBtSqghGQNvd
V5+vUErAjZ2gMBPaRkDkdg7X6cRIwI+B3UEJvUdAMgw2KNMvSsDhqdqf2ptI
QDhNIiVsEknASW2cV65rSUAu1HgTV/pIwHHHFUIPTUpAViyBkH+JR8CwvFOG
ch9LQD1Z23C+BUbAPvZRF7HtS0DQuQLpspdGwIzGB9t8zUxAH+pTZKstQsDw
MYL4Sp5NQFj7ugqvgj3AFDS0SKaATkBPAIrbsh5BwE/RqvIDVE9ADH3Pu70l
OMBt2bB0nhFQQEazhpt3LzrAkhVoiQGCUECNTujUbBI4wEKfAcvl6lBA3kPu
sN2bOsBS9PalkFxRQBMp2xt9qDvAimtMJynMUUAPWHiBMu4/wE0whNVCNFJA
S1sVPs1ePMBwwBcdI6VSQIRmot/EjzXAH56NkYQOU0BhFrYgmUU8wPWdY6zT
dVNAXsxpGH/9P8AraZVg6eVTQOPvFV+NMzzA7IGpQYBOVEDoBdNcdYJAwA1m
Gbzdv1RAQDPhb9U2RsBWbOncKC9VQHW7eZRYkEnAKsCbKvWWVUAerhWFNXRI
wF7fqRGIB1ZASOft9I3wScAdTJolnHBWQLFw3U1umkTAPITm0nbiVkCHqU3E
1+ZCwIPekiY/UldAPzXbtZAtQ8BVhiGniLpXQO7QNQM/fkPAh/kLwZgrWEAJ
RYAhuvk+wEW62AcqlVhAbSeD6cA+QMA+GeT4//9YQCuTji27qT7AZ165kQ==

                    "]]}}}, {}, {}}, {
                DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
                 AxesOrigin -> {0, 0}, 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, DisplayFunction -> Identity, 
                 PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                 All, DisplayFunction -> Identity, AspectRatio -> 1, 
                 Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Opacity[0.5], 
                   Thickness[Tiny], 
                   RGBColor[0.368417, 0.506779, 0.709798]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, GridLinesStyle -> Directive[
                   GrayLevel[0.5, 0.4]], ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                 Method -> {
                  "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                   AbsolutePointSize[6], "ScalingFunctions" -> None, 
                   "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                 PlotRange -> {{0., 100.}, {-57.83938028688144, 
                  1.5707963267948966`}}, PlotRangeClipping -> True, 
                 PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
         Baseline], DynamicModuleValues :> {}], 
       StyleBox["]", "NonInterpretableSummary"]}]},
    "CopyTag",
    DisplayFunction->(#& ),
    InterpretationFunction->("InterpolatingFunction[{{0., 100.}}, <>]"& )],
   False,
   Editable->False,
   SelectWithContents->True,
   Selectable->False], "[", "t", "]"}]], "Output",
 CellChangeTimes->{3.7191937886271057`*^9, 3.7191938823557844`*^9, 
  3.719193978665156*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[CapitalOmega]22", "=", 
  RowBox[{
   RowBox[{"\[Theta]2", "[", "t", "]"}], "/.", 
   RowBox[{"A", "[", 
    RowBox[{"[", "1", "]"}], "]"}], " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Theta]1", "[", "0", "]"}], "\[Equal]", 
      RowBox[{"Pi", "/", "2"}]}], ",", " ", 
     RowBox[{
      RowBox[{"\[Theta]2", "[", "0", "]"}], "\[Equal]", 
      RowBox[{"Pi", "/", "3"}]}], ",", " ", 
     RowBox[{"all", " ", "masses", " ", "and", " ", "lengths", " ", "unity"}],
      ",", " ", 
     RowBox[{"g", "\[Equal]", "9.8"}]}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.719193794345956*^9, 3.7191938094732857`*^9}, {
  3.7191941111019955`*^9, 3.719194111352*^9}, {3.7191942084395485`*^9, 
  3.7191942306450243`*^9}}],

Cell[BoxData[
 RowBox[{
  TagBox[
   TemplateBox[{RowBox[{
       StyleBox[
        TagBox["InterpolatingFunction", "SummaryHead"], 
        "NonInterpretableSummary"], 
       StyleBox["[", "NonInterpretableSummary"], 
       DynamicModuleBox[{Typeset`open$$ = False}, 
        PanelBox[
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAnIW2B5tvvD5lcy04UsHwP0XRMWw0
Ffo/An6Yw/NO9b8FZS60Bi4LQHssL/8AXPM/aslGZ8wwFEC5crH1lkbev8qC
eNpvqRpAp+iL9Bxw3b8VebNxPtcgQLxTktut5/I/IB09Xc4dJECfg0tvge78
vykcpROTqidARmlzozG9/D9wLA79xCYrQOgfmEht/OG/EKmJTQBnLkBI4dHo
unTwP1jAcTS49jBAgfcQJks72T9V4qf19JsyQAOK2JLQp/y/8YxeUOg4NEAZ
ivVvzX7/PwxlhBD2+DVAtUDipCJLA8BVczOECJs3QNRchyb59Pk/Hq9RXTVg
OUA9CXnx8cPjv4Vz8M8YHTtARXyrFjAs4b8Zbhj2ALw8QArOt5p4K+c/LZav
gQN+PkBz02Rx1y4EwDj6Z2AFEUBAxzW8y1gkJMAZwK8ylvRAQLf8M2ruAjTA
Scq3UQLUQUCiAmhMonA8wI9vhMpwpEJAXsU1tujCQMCVqwh2bIZDQJspDE6f
gD7AsoJRe2pZREAQYv444kdAwB6eWs1DKEVAv4IzRBUhOMBKUBtSqghGQIAO
GDRahDnAjZ2gMBPaRkAD4mbqUMQ1wI+B3UEJvUdATilXz+QNM8Dhqdqf2ptI
QL0XqQG/STLASW2cV65rSUC7vTeN89wxwHHHFUIPTUpA//dO3cvzMcCwvFOG
ch9LQJUp7HIYxDPAPvZRF7HtS0CL0QAVZYU0wIzGB9t8zUxATtEBM4XfM8Dw
MYL4Sp5NQE08NbUHYzPAFDS0SKaATkAY2f0YvHEywE/RqvIDVE9AzPt6XjUa
McBt2bB0nhFQQC+peDqMrjLAkhVoiQGCUEBdk8uY4cwywEKfAcvl6lBAm713
pLIGNMBS9PalkFxRQKk0EBzNzzPAimtMJynMUUDx/bb119gywE0whNVCNFJA
/geuvPCBMcBwwBcdI6VSQIWGW+A7oTTAH56NkYQOU0COKJ5paOcxwPWdY6zT
dVNAIW4IxL4vNcAraZVg6eVTQCAm4VJaJijA7IGpQYBOVEBmv18JmvIowA1m
Gbzdv1RAU/7qSZFMIsBWbOncKC9VQAarURJ9/BDAKsCbKvWWVUBzbbddB1gg
wF7fqRGIB1ZAyo4bA8ImFcAdTJolnHBWQNmVpuUn8xfAPITm0nbiVkB9qAoM
LsIgwIPekiY/UldAWMfje26oEcBVhiGniLpXQED4a+H/qiHAh/kLwZgrWEAi
591heMz0v0W62AcqlVhAArI/f4I2wL8+GeT4//9YQJS9BiawnvA/ysbDKQ==

                    "]]}}}, {}, {}}, {
                DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
                 AxesOrigin -> {0, 0}, 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, DisplayFunction -> Identity, 
                 PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                 All, DisplayFunction -> Identity, AspectRatio -> 1, 
                 Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Opacity[0.5], 
                   Thickness[Tiny], 
                   RGBColor[0.368417, 0.506779, 0.709798]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, GridLinesStyle -> Directive[
                   GrayLevel[0.5, 0.4]], ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                 Method -> {
                  "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                   AbsolutePointSize[6], "ScalingFunctions" -> None, 
                   "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                 PlotRange -> {{0., 100.}, {-33.522726799254755`, 
                  1.9684576390651556`}}, PlotRangeClipping -> True, 
                 PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAnIW2B5tvvD5lcy04UsHwP0XRMWw0
Ffo/An6Yw/NO9b8FZS60Bi4LQHssL/8AXPM/aslGZ8wwFEC5crH1lkbev8qC
eNpvqRpAp+iL9Bxw3b8VebNxPtcgQLxTktut5/I/IB09Xc4dJECfg0tvge78
vykcpROTqidARmlzozG9/D9wLA79xCYrQOgfmEht/OG/EKmJTQBnLkBI4dHo
unTwP1jAcTS49jBAgfcQJks72T9V4qf19JsyQAOK2JLQp/y/8YxeUOg4NEAZ
ivVvzX7/PwxlhBD2+DVAtUDipCJLA8BVczOECJs3QNRchyb59Pk/Hq9RXTVg
OUA9CXnx8cPjv4Vz8M8YHTtARXyrFjAs4b8Zbhj2ALw8QArOt5p4K+c/LZav
gQN+PkBz02Rx1y4EwDj6Z2AFEUBAxzW8y1gkJMAZwK8ylvRAQLf8M2ruAjTA
Scq3UQLUQUCiAmhMonA8wI9vhMpwpEJAXsU1tujCQMCVqwh2bIZDQJspDE6f
gD7AsoJRe2pZREAQYv444kdAwB6eWs1DKEVAv4IzRBUhOMBKUBtSqghGQIAO
GDRahDnAjZ2gMBPaRkAD4mbqUMQ1wI+B3UEJvUdATilXz+QNM8Dhqdqf2ptI
QL0XqQG/STLASW2cV65rSUC7vTeN89wxwHHHFUIPTUpA//dO3cvzMcCwvFOG
ch9LQJUp7HIYxDPAPvZRF7HtS0CL0QAVZYU0wIzGB9t8zUxATtEBM4XfM8Dw
MYL4Sp5NQE08NbUHYzPAFDS0SKaATkAY2f0YvHEywE/RqvIDVE9AzPt6XjUa
McBt2bB0nhFQQC+peDqMrjLAkhVoiQGCUEBdk8uY4cwywEKfAcvl6lBAm713
pLIGNMBS9PalkFxRQKk0EBzNzzPAimtMJynMUUDx/bb119gywE0whNVCNFJA
/geuvPCBMcBwwBcdI6VSQIWGW+A7oTTAH56NkYQOU0COKJ5paOcxwPWdY6zT
dVNAIW4IxL4vNcAraZVg6eVTQCAm4VJaJijA7IGpQYBOVEBmv18JmvIowA1m
Gbzdv1RAU/7qSZFMIsBWbOncKC9VQAarURJ9/BDAKsCbKvWWVUBzbbddB1gg
wF7fqRGIB1ZAyo4bA8ImFcAdTJolnHBWQNmVpuUn8xfAPITm0nbiVkB9qAoM
LsIgwIPekiY/UldAWMfje26oEcBVhiGniLpXQED4a+H/qiHAh/kLwZgrWEAi
591heMz0v0W62AcqlVhAArI/f4I2wL8+GeT4//9YQJS9BiawnvA/ysbDKQ==

                    "]]}}}, {}, {}}, {
                DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
                 AxesOrigin -> {0, 0}, 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, DisplayFunction -> Identity, 
                 PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                 All, DisplayFunction -> Identity, AspectRatio -> 1, 
                 Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Opacity[0.5], 
                   Thickness[Tiny], 
                   RGBColor[0.368417, 0.506779, 0.709798]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, GridLinesStyle -> Directive[
                   GrayLevel[0.5, 0.4]], ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                 Method -> {
                  "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                   AbsolutePointSize[6], "ScalingFunctions" -> None, 
                   "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                 PlotRange -> {{0., 100.}, {-33.522726799254755`, 
                  1.9684576390651556`}}, PlotRangeClipping -> True, 
                 PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
         Baseline], DynamicModuleValues :> {}], 
       StyleBox["]", "NonInterpretableSummary"]}]},
    "CopyTag",
    DisplayFunction->(#& ),
    InterpretationFunction->("InterpolatingFunction[{{0., 100.}}, <>]"& )],
   False,
   Editable->False,
   SelectWithContents->True,
   Selectable->False], "[", "t", "]"}]], "Output",
 CellChangeTimes->{3.7191938331006284`*^9, 3.719193864994074*^9, 
  3.719194001496062*^9, 3.719194125338502*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Abs", "[", 
    RowBox[{"\[CapitalOmega]21", "-", "\[CapitalOmega]22"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "100"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Plot", " ", 
     RowBox[{
      SuperscriptBox["\[Theta]1", 
       RowBox[{"(", "2", ")"}]], "[", "t", "]"}]}], "-", 
    RowBox[{
     SuperscriptBox["\[Theta]1", 
      RowBox[{"(", "1", ")"}]], "[", "t", "]"}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.719193891139249*^9, 3.7191939430351553`*^9}, {
  3.7191941783922267`*^9, 3.7191941796578703`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJwUV3c8198bFZKV7E323vMzfNzz+ZA0SKVCQzQIRSWlEkklScIXlaSNtiRR
MsrKyoiMSEYqGaGS+L1/f3k97ue+73Of59znnKPqHbhmBzcXF9c/QS6u//9V
O//vRrpyie3O/Ya0NSU95Bm/7uLdvldJkE72GlBxyaEHN3V8HxLxx9bDJsU9
JNGqb9PCuGfEMfj5i4jCHlJusteHz/cVcY64sfnUgx5yVGoufy6jjPTdEol2
SOghyQlLbGfOVRD+wHMfnTf3kIeLYst+H35LcsR+Giny9pDK2EbHSZ968ihf
PI42+ZGMRgkPHsp+RzQsm1+H7ukiYWUPdX9lNBGuNr5s9T0dRJB7bcCBlBYi
+3tTwr15H0gyph78PNdKDD6wT0YufU/Uwy+O7Y36QBrWVUzKbG8ij17aWIwe
7iCZDy4ObQppIFWME8+/+3STaKNdWtqn35C7NhLHLB/2kEezglw35YrJWMf2
q8HZn0jq1RqxgGdPCe1IXvGTW71k9Fzg/EC1O+SYPH/veMZnEuHxrTn81xHy
+rk7j1laH1Gxq2svXZNOBN3vauxN6SdByy9o5+U8JC6/Z5Y8ShggGsrZi8Xa
npKUFGefkXODJGjHLbbm9DPy0Soj2ujMFzK2/k6l49anROP9WNbuqCHi+Gzr
872n7hO/A3Zv74V/JVvHcjqqlVLII8n/vn87/I2oyHOPJ665QKaeDCzUD/lO
uFyXr5tn+ICw1tKM/fYOEy6rxLLmgAJSfaFj7xefEZK/vffvY88qEp2aXJVo
OkqK43zyaA/riYEv8TB/OEq2vj3/V2CkkdRbf/naaDBGYo8VrfapbiH7Flw4
si97jIxy4lmfLNqIVCtdWFxnnGTyVylH/v1A8m/3pj2+NU4qB+KTGqbbycaQ
s4ar1X+S1Pgs509aHWR2iUXRaMZPImp/6a5ZTDu5JtXlHK88Qb4IV52rt/1A
7PtPdhunTZBHw6l303e2ki+5RkH1cpPEcR/9hY1mCzkb1coVmDJJeirPRzy7
3EiMXCMuiEhNkeiGzUZv39aTRnVdtQcJUyRjYuMSU7NqIlt22G743C8yqlAh
Ylj4khQmqDfHCv0mPbVxVprBOWSLd812gzO/CZd4RPbjj2lkntmBybd8fwgm
NvW3qcaTm/OUT/lH/SERgfICpOQBWfquXFqIe5qITsvsqO4rIF8zAu9kh0+T
4ozrS36tKiOmKKkcOvyXxO/ZvsyX1JPmRX7uZ37/JRlrFjh/P99IDnWLf9UJ
mSG+VzyDl3m2EIWHhYcrf86Q3BB3xbjpVlJ0bLuQ795/pO0xg79kTTvxcl6Y
tmDkHwnWeZtCtnQSXuU8gzsBsySgLGM0TeYjuTO85aXD11litbz51fMj3WT5
ywXOAz5zxO+P0IyYfQ8xnfOelB6dI/Vmu7PXX+8hsSqedeo2XDh0c8Xc4coe
ElEirGYTwYWJfI8cpcc9JNi74IDray6c4bi2nlndQ3x5fKsC+OchwNW4UU6/
m2y6KaV0cuU8uKq5Vi4p6CQuS8qCrsTPg7zHk5cbF1L9Gwh6/bR5HmztXeS2
6TYT2mll2TpZbsjurHLncaolBjo1/gObuMH4J/Kf75VSolIV+mo2g1q/d1xp
h0wOkfDTlpDp5waX7bSd/4UQwifUstNYlwcm00lvn7zIItN3IwuW7ubBoaSQ
GOWsfPJjpYnI1sc8UNl/J6Gwo5j0Dnd5HZrkQepQ6R1aexl5H3f2aTydF1tr
0qsmNd+QamO6QFYYL6INDsVGXX1NihoGNpWUUOuX1/7pYJWSnL1Jjz7Mnw+u
LLEV1swX5LY4h3d8GRUPxZzrVXlMLj0Z2SAYNx/FP8pNmkfjSZzrlbtqjfOR
MScR3B1wnRyfXD7HkObD1sm4fVr0PBKc/HvNWg8+BHn0q/JplxBf69u3/dP5
ED80vLAst5y4hM5zTtNaAGjKOdz0aSAq/56l/bPix6HP2VXL9NuJZPqOUakj
/Ji5GDN9M62T8BMJe6NX/JA0nh85NvKRzHQXpzjwCID2xaR4b2QPGYnY823L
UgHYLJbaGOP+ifSqKpKDZwUQmf9I833/J/K+tCrhfL0ARtR19bYv7CXV2w4O
3JEQBFNCTHpt7idSxKvJKN4giGG3I7nHXvaQnFuN59ouCyIg2mAugcLbbYeI
T6PdgjD69UxHV/ADuTRoaCmgIYQpaXrFkGkjiYvuiFb1FQKtNiUx0qKMROqe
6aTfE0JEQ3rF21eHSUi1lcmaUSEEhC3yj08vJ37+fSf8LIRRZJR11DT8Pdks
nNAaeUgYda5jJSGlPcTlPtG//EIYG/cHxg2M9xN75+FjT7gWYtLw4smrB74S
2silxrf2C/H1ye6YvT3DxCDeUasveiF05OwVf34bISqmU6EzNQvh2DRq5UxG
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
DhkG99du3P/RGTqXFIrE6sgQyNGy3dpNvIeo3WS9JjJGdv+R4/Q5o+sN3fRX
C9GvrGlZsBl0RhOPldixV2RcMbnYpTXijMObeiKniPsHRXZXi407g9/WZpci
0R9smqSe45oi8itETZu6SobNa+nYbz+dUSmQaa91igzp2982dMwSel9VedU/
noyZtMfkZwvOWB5/v0YomIxS+tY/Z3moWGnyKbrFkox0batPKbxUmGbIB03I
k7GTl/9hlAAVPY8efrzKTYbr1+48P2EqspN/qWYMkqBRXxLDEKPCaMt6U8l6
EniuHvKxlKKiwXe0IPYy0Z8d8iKpylFxRXN0Y3ssCTUB2jJCSlRMKzEibTgk
nHNYmJtXpUKxv3crR4mE/UqvPw5pUuFz2yvFbMwaXv8uPnirS8Xy6QdnDpZb
Q+SRy/4iUyrKTix6dblaY+KsjHeOJRVSan82FksQ9SJm3CqJTCX0PVKSO2CF
I1anZr0pVBToJVX6EvoLlAzqcHahYuDfEmzkWMFhxqrSmEHF6OMWboYSUa/e
8/8n707Ffrfg112Tlli42xPNt4aK818qJpReWOJjVum6X15UvO/w17t5jei3
I5It+3yokNvqTdtP9OPZ7HWSzZuomHvw5pBisiUiDHV+VwZQ4R6pHMZ30BIs
wb/tV4KouNB4U2j0iCX0xl9XZIZQIRtwNaj9tCX4mi7lxIZRIXih7CH7NtG/
FO3ZGxxJhbzdLZONbyzhJb/YU7iXivBNGZ4my6zwPOOIy0gMFRW/hfJiXK1g
xi1Uop1AxYoHW7XNz1rhyu4zUiGHqPBaemZDMVFfxb4qHixKoeKT8dlpMxtr
HPIuHBk9ToVn5cu42oPWmH5l5KGbScXFdLdjAzXWCLB7ULUjm4rUxGj9HT+t
8bbEQbX4Pyquirntv6xKgoNq4/Fv54j4hzfwtriRUHLa46feRSouBXiofI8i
QYn3k2/oVSoeqV/hac0hITNmy/NbN6gwjlvawX+fhH/fxvQnblFh3RccLPee
hJ43C4thFVQ8N+2ONhYgg+V0eNudKircmuq669XJeFSxqvV7DaFH7x9rvOzI
OHdW4WL4Cyqq+sf5P+8k3pfgdb7SV1Q8dPWwGEki40CiYeTUayoWq/pE+f8j
Y3T6fqfxO0If9aoOkkQ/7bMVlMgOKoIlRGMaasho/NBws6yLig/1rflPXpNh
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
D9OzivFRJ4heLwr89e8fH05nVy/LI/X0PyDpCZE=
      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 100}, {0., 49.87116708896994}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7191939278292646`*^9, 3.7191939437382097`*^9}, 
   3.719194003886738*^9, 3.7191940439069138`*^9, 3.7191941437000875`*^9, {
   3.7191941759702377`*^9, 3.719194182626605*^9}}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.719157311091341*^9, 3.7191573212810817`*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.719157311341345*^9, 3.719157323312361*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7191573115444503`*^9, 3.7191573252342653`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Animate", "[", 
  RowBox[{
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"ParametricPlot", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            SubscriptBox["l", "1"], 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}]}], ",", 
           RowBox[{
            RowBox[{"-", 
             SubscriptBox["l", "1"]}], 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}]}]}], "}"}], "/.", 
         RowBox[{"A", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "/.", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["l", "1"], "\[Rule]", "1"}], "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "time"}], "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "2.1"}], ",", "2.1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "2.1"}], ",", "2.1"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ParametricPlot", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
             SubscriptBox["l", "1"], 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}]}], "+", 
            RowBox[{
             SubscriptBox["l", "2"], 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}]}]}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              SubscriptBox["l", "1"]}], 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}]}], "-", 
            RowBox[{
             SubscriptBox["l", "2"], 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}]}]}]}], "}"}], "/.", 
         RowBox[{"A", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           SubscriptBox["l", "1"], "\[Rule]", "1"}], ",", 
          RowBox[{
           SubscriptBox["l", "2"], "\[Rule]", "1"}]}], "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "time"}], "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "2.1"}], ",", "2.1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "2.1"}], ",", "2.1"}], "}"}]}], "}"}]}]}], "]"}]}], 
    "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"time", ",", "0", ",", "30"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.71902883645886*^9, 3.7190289553847265`*^9}, {
   3.7190289944064407`*^9, 3.7190290324969788`*^9}, {3.719029137978592*^9, 
   3.7190291987877474`*^9}, {3.7190292541591253`*^9, 3.719029317896368*^9}, {
   3.719029349158059*^9, 3.719029363103103*^9}, {3.7190296518045735`*^9, 
   3.7190296770526037`*^9}, {3.7190297377690835`*^9, 3.719029836038705*^9}, {
   3.7190298725879345`*^9, 3.7190299098589067`*^9}, 3.7191122448981*^9, {
   3.7191923376989317`*^9, 3.7191923405895987`*^9}, {3.7191923822348*^9, 
   3.7191923831900015`*^9}, {3.71919244136726*^9, 3.719192445572591*^9}, {
   3.7191925455040307`*^9, 3.7191925510838146`*^9}, {3.7191950894605937`*^9, 
   3.719195092759568*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`time$$ = 24.843996047973633`, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`time$$], 0, 30}}, Typeset`size$$ = {
    450., {222., 228.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`time$49959$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`time$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`time$$, $CellContext`time$49959$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Show[
        ParametricPlot[
         ReplaceAll[
          ReplaceAll[{Subscript[$CellContext`l, 1] Sin[
              $CellContext`\[Theta]1[$CellContext`t]], (-
             Subscript[$CellContext`l, 1]) Cos[
              $CellContext`\[Theta]1[$CellContext`t]]}, 
           Part[$CellContext`A, 1]], {
          Subscript[$CellContext`l, 1] -> 1}], {$CellContext`t, 
          0, $CellContext`time$$}, PlotRange -> {{-2.1, 2.1}, {-2.1, 2.1}}, 
         PlotStyle -> Red], 
        ParametricPlot[
         ReplaceAll[
          ReplaceAll[{Subscript[$CellContext`l, 1] Sin[
               $CellContext`\[Theta]1[$CellContext`t]] + 
            Subscript[$CellContext`l, 2] Sin[
               $CellContext`\[Theta]2[$CellContext`t]], (-
              Subscript[$CellContext`l, 1]) Cos[
               $CellContext`\[Theta]1[$CellContext`t]] - 
            Subscript[$CellContext`l, 2] Cos[
              $CellContext`\[Theta]2[$CellContext`t]]}, 
           Part[$CellContext`A, 1]], {
          Subscript[$CellContext`l, 1] -> 1, Subscript[$CellContext`l, 2] -> 
           1}], {$CellContext`t, 0, $CellContext`time$$}, 
         PlotRange -> {{-2.1, 2.1}, {-2.1, 2.1}}]], 
      "Specifications" :> {{$CellContext`time$$, 0, 30, 
         AppearanceElements -> {
          "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
           "DirectionButton"}}}, 
      "Options" :> {
       ControlType -> Animator, AppearanceElements -> None, DefaultBaseStyle -> 
        "Animate", DefaultLabelStyle -> "AnimateLabel", SynchronousUpdating -> 
        True, ShrinkingDelay -> 10.}, "DefaultOptions" :> {}],
     ImageSizeCache->{511., {269., 276.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Animate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.7190290331994777`*^9, 3.7190291502702847`*^9, 3.71902919936217*^9, 
   3.7190292594568653`*^9, {3.719029300662681*^9, 3.719029318578825*^9}, 
   3.719029365637909*^9, 3.719029680002674*^9, 3.719029845560717*^9, 
   3.719029912858014*^9, 3.7191922782391443`*^9, 3.7191923426696854`*^9, 
   3.7191923844868803`*^9, 3.7191924461819887`*^9, 3.7191925565213833`*^9, 
   3.7191950944314685`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
   "animation", " ", "of", " ", "the", " ", "path", " ", "of", " ", "the", 
    " ", "2", " ", "masses", " ", "of", " ", "the", " ", "double", " ", 
    "pendulum", " ", "for", " ", "unit", " ", "masses", " ", "unit", " ", 
    "lengths"}], ",", " ", 
   RowBox[{
    RowBox[{"\[Theta]1", "[", "0", "]"}], "=", 
    RowBox[{
     RowBox[{"\[Theta]2", "[", "0", "]"}], "=", 
     RowBox[{"Pi", "/", "2"}]}]}], ",", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Theta]1", "'"}], "[", "0", "]"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Theta]2", "'"}], "[", "0", "]"}], "=", "0."}]}], ",", " ", 
   RowBox[{"g", "=", "9.8"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.7191950608174353`*^9, 3.7191951781912637`*^9}}]
},
WindowSize->{1366, 725},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
Magnification->1.25,
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (July 28, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 343, 11, 71, "Input"],
Cell[904, 33, 295, 4, 37, "Input"],
Cell[1202, 39, 2097, 63, 89, "Input"],
Cell[CellGroupData[{
Cell[3324, 106, 5741, 113, 122, "Input"],
Cell[9068, 221, 28833, 557, 86, "Output"]
}, Open  ]],
Cell[37916, 781, 147, 2, 37, "Input"],
Cell[CellGroupData[{
Cell[38088, 787, 369, 9, 37, "Input"],
Cell[38460, 798, 51524, 856, 298, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[90021, 1659, 271, 7, 37, "Input"],
Cell[90295, 1668, 43954, 733, 288, "Output"]
}, Open  ]],
Cell[134264, 2404, 1236, 23, 87, "Input"],
Cell[135503, 2429, 96, 1, 37, "Input"],
Cell[135602, 2432, 94, 1, 37, "Input"],
Cell[135699, 2435, 94, 1, 37, "Input"],
Cell[CellGroupData[{
Cell[135818, 2440, 1599, 46, 66, "Input"],
Cell[137420, 2488, 5859, 153, 150, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[143316, 2646, 236, 5, 37, "Input"],
Cell[143555, 2653, 3733, 106, 131, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[147325, 2764, 730, 22, 64, "Input"],
Cell[148058, 2788, 522, 16, 57, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[148617, 2809, 694, 20, 64, "Input"],
Cell[149314, 2831, 442, 14, 57, "Output"]
}, Open  ]],
Cell[149771, 2848, 1715, 43, 96, "Input"],
Cell[CellGroupData[{
Cell[151511, 2895, 1143, 36, 64, "Input"],
Cell[152657, 2933, 1271, 43, 57, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[153965, 2981, 1684, 35, 86, "Input"],
Cell[155652, 3018, 784, 14, 37, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[156473, 3037, 887, 22, 62, "Input"],
Cell[157363, 3061, 595, 16, 60, "Output"]
}, Open  ]],
Cell[157973, 3080, 147, 2, 86, "Input"],
Cell[CellGroupData[{
Cell[158145, 3086, 1456, 34, 37, "Input"],
Cell[159604, 3122, 597, 13, 37, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[160238, 3140, 1084, 29, 37, "Input"],
Cell[161325, 3171, 530, 12, 37, "Output"]
}, Open  ]],
Cell[161870, 3186, 1250, 28, 86, "Input"],
Cell[CellGroupData[{
Cell[163145, 3218, 1602, 36, 37, "Input"],
Cell[164750, 3256, 35337, 593, 275, "Output"]
}, Open  ]],
Cell[200102, 3852, 92, 1, 37, "Input"],
Cell[200197, 3855, 92, 1, 37, "Input"],
Cell[200292, 3858, 91, 1, 37, "Input"],
Cell[200386, 3861, 96, 1, 37, "Input"],
Cell[CellGroupData[{
Cell[200507, 3866, 764, 19, 37, "Input"],
Cell[201274, 3887, 13763, 271, 86, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[215074, 4163, 966, 21, 37, "Input"],
Cell[216043, 4186, 13785, 271, 86, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[229865, 4462, 1104, 24, 62, "Input"],
Cell[230972, 4488, 56282, 935, 295, "Output"]
}, Open  ]],
Cell[287269, 5426, 93, 1, 37, "Input"],
Cell[CellGroupData[{
Cell[287387, 5431, 762, 19, 37, "Input"],
Cell[288152, 5452, 13593, 269, 86, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[301782, 5726, 763, 19, 37, "Input"],
Cell[302548, 5747, 13617, 269, 86, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[316202, 6021, 659, 19, 62, "Input"],
Cell[316864, 6042, 59001, 980, 297, "Output"]
}, Open  ]],
Cell[375880, 7025, 94, 1, 37, "Input"],
Cell[375977, 7028, 92, 1, 37, "Input"],
Cell[376072, 7031, 96, 1, 37, "Input"],
Cell[CellGroupData[{
Cell[376193, 7036, 3554, 94, 110, "Input"],
Cell[379750, 7132, 3450, 68, 565, "Output"]
}, Open  ]],
Cell[383215, 7203, 777, 20, 86, "Input"]
}
]
*)

